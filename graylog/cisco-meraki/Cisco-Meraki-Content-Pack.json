{
  "v": 1,
  "id": "c2685c4f-a695-4159-b36e-e433af4c15cd",
  "rev": 1,
  "name": "Cisco Meraki",
  "summary": "Takes in raw Cisco Meraki Logs and extracts the fields. Uses port 1514",
  "description": "Receives Cisco Meraki syslogs and extracts the various fields then converts them in a separate stream to the appropriate field type and then sends them back to the original stream to keep the stream pipelines clean. The \"Meraki - UNIX Epoch Conversion with Timezone\" will need to be edited. Change \"America/Los_Angeles\" to the appropriate timezone for your location. View the GitHub instructions.md file for more information like adding the lookup tables, etc.",
  "vendor": "kbrown900",
  "url": "https://github.com/kbrown900/Templates/blob/main/graylog/cisco-meraki/Cisco-Meraki-Content-Pack.json",
  "parameters": [],
  "entities": [
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "8252a818-2cd6-4ef0-9de7-52bffea393c5",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - frame_control"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - frame_control\"\nwhen\n  has_field(\n    field : \"meraki_fc_type\"\n  )\n  AND\n  has_field(\n    field : \"meraki_fc_subtype\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_fc_type\"\n  );\n  let output_2 = get_field(\n    field : \"meraki_fc_subtype\"\n  );\n  let output_3 = to_string(\n    value : output_1\n  );\n  let output_4 = to_string(\n    value : output_2\n  );\n  let output_5 = concat(\n    first : output_3,\n    second : \"_\"\n  );\n  let output_6 = concat(\n    first : output_5,\n    second : output_4\n  );\n  set_field(\n    field : \"meraki_fc_combined\",\n    value : output_6\n  );\n  let gl2_fragment_extractor_1743194726951 = lookup_value(\"Meraki - FC Combined\", to_string($message.\"meraki_fc_combined\"));\nset_field(\"meraki_frame_control\", gl2_fragment_extractor_1743194726951);\n  let output_7 = gl2_fragment_extractor_1743194726951;\n  set_field(\n    field : \"meraki_frame_control\",\n    value : output_7\n  );\n  remove_single_field(\n    field : \"meraki_fc_combined\"\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "248c7454-6b16-4f59-ae0c-a1bc762edaa2",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - protocol"
        },
        "description": {
          "@type": "string",
          "@value": "Converts the protocol number to its IANA IP description and removes duplicate field. "
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - protocol\"\nwhen\n  has_field(\n    field : \"meraki_protocol_number\"\n  )\nthen\n  let output_1 = get_field(\n    field : \"meraki_protocol_number\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_protocol_number\",\n    value : output_2\n  );\n  let gl2_fragment_extractor_1743547759943 = lookup_value(\"Meraki - protocol\", to_string($message.\"meraki_protocol_number\"));\nset_field(\"meraki_protocol_descripton\", gl2_fragment_extractor_1743547759943);\n  let output_3 = gl2_fragment_extractor_1743547759943;\n  remove_single_field(\n    field : \"meraki_protocol_number\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "f6a261e1-6517-42cf-b530-957d7e657748",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - original_server_ip"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - original_server_ip\"\nwhen\n  has_field(\n    field : \"meraki_original_server_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_original_server_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_original_server_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_table",
        "version": "1"
      },
      "id": "623475fb-46fa-4406-a642-8e0570356140",
      "data": {
        "default_single_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "cache_name": {
          "@type": "string",
          "@value": "1dd0925c-3993-43fd-b313-31dd164812c5"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - band"
        },
        "default_multi_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "default_multi_value": {
          "@type": "string",
          "@value": ""
        },
        "data_adapter_name": {
          "@type": "string",
          "@value": "98d96929-a8fa-4c64-bf74-b07bf5c712a1"
        },
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - band"
        },
        "default_single_value": {
          "@type": "string",
          "@value": ""
        },
        "description": {
          "@type": "string",
          "@value": "Lookup table for wireless band"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "629ce0eb-5c5b-40ff-928b-7bc7d0e6ef2f",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - priority"
        },
        "description": {
          "@type": "string",
          "@value": "Converts snort priority to description."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - priority\"\nwhen\n  has_field(\n    field : \"meraki_priority\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_priority\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_priority\",\n    value : output_2\n  );\n  let gl2_fragment_extractor_1743831166804 = lookup_value(\"Meraki - priority\", to_string($message.\"meraki_priority\"));\nset_field(\"meraki_priority_description\", gl2_fragment_extractor_1743831166804);\n  let output_3 = gl2_fragment_extractor_1743831166804;\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "event_definition",
        "version": "1"
      },
      "id": "eb9970cd-a9e1-4857-87c5-86db4373041e",
      "data": {
        "field_spec": {},
        "config": {
          "query_parameters": [],
          "search_within_ms": 300000,
          "query": {
            "@type": "string",
            "@value": "meraki_event_type:\"martian_vlan\""
          },
          "cron_expression": null,
          "cron_timezone": null,
          "use_cron_scheduling": false,
          "streams": [],
          "execute_every_ms": 60000,
          "event_limit": 100,
          "group_by": [],
          "series": [
            {
              "type": "count",
              "id": "count-meraki_event_type",
              "field": "meraki_event_type"
            }
          ],
          "conditions": {
            "expression": {
              "expr": ">=",
              "left": {
                "expr": "number-ref",
                "ref": "count-meraki_event_type"
              },
              "right": {
                "expr": "number",
                "value": 5
              }
            }
          },
          "type": "aggregation-v1",
          "stream_categories": [],
          "filters": []
        },
        "priority": {
          "@type": "integer",
          "@value": 2
        },
        "notifications": [],
        "remediation_steps": null,
        "matched_at": "2025-04-15T21:35:44.338Z",
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "notification_settings": {
          "grace_period_ms": 300000,
          "backlog_size": 0
        },
        "updated_at": "2025-03-28T22:19:43.936Z",
        "title": {
          "@type": "string",
          "@value": "Meraki - Martian VLAN Detection"
        },
        "is_scheduled": {
          "@type": "boolean",
          "@value": true
        },
        "key_spec": [],
        "storage": [
          {
            "type": "persist-to-streams-v1",
            "streams": [
              "000000000000000000000002"
            ]
          }
        ],
        "alert": {
          "@type": "boolean",
          "@value": false
        },
        "description": {
          "@type": "string",
          "@value": "Triggers an alert when a martian_vlan event is detected from a device."
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "3fa290e3-1937-442a-be44-350ec90a3636",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Flows"
        },
        "description": {
          "@type": "string",
          "@value": " Parses out flows logs"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Flows\"\nwhen\n  grok(\n  value: to_string($message.\"message\"),\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} flows\"\n).matches == true\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category} %{WORD:action}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src=%{IP:src_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst=%{IP:dst_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"mac=%{COMMONMAC:mac_address}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"protocol=%{WORD:protocol}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"protocol=%{INT:protocol_number:INT}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"sport=%{INT:src_port:INT}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dport=%{INT:dst_port:INT}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"type=%{BASE10NUM:icmp_type}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "0f0a1ceb-d5ab-4216-b958-44808bc7eddf",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - IP Flow"
        },
        "description": {
          "@type": "string",
          "@value": "Parses logs containing ip_flow"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - IP Flow\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"ip_flow\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src=%{IP:src_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst=%{IP:dst_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"protocol=%{WORD:protocol}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"sport=%{INT:src_port:INT}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dport=%{INT:dst_port:INT}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"translated_src_ip=%{IP:translated_src_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"translated_port=%{INT:translated_port:INT}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "15c360da-fed0-4e17-b221-edf83129d626",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - ip_src"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - ip_src\"\nwhen\n  has_field(\n    field : \"meraki_ip_src\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\"\n  );\n  let output_1 = get_field(\n    field : \"meraki_ip_src\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_ip_src\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "f2582e1d-14b0-4e5c-8155-b4f521492c0b",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - arp_src"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - arp_src\"\nwhen\n  has_field(\n    field : \"meraki_arp_src\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\"\n  );\n  let output_1 = get_field(\n    field : \"meraki_arp_src\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_arp_src\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "a12401a6-dc04-4040-954e-40c9fdabad36",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Events - Route Connection Change"
        },
        "description": {
          "@type": "string",
          "@value": "Parses route connection change logs"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Events - Route Connection Change\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"route_connection_change\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category} type=%{DATA:event_type} peer_type='%{DATA:peer_type}' \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"peer='%{IP:peer}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"connection_status='%{WORD:connection_status}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "ebb01404-fd4b-4b44-a056-35c7271a421a",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Events - STP Role Change"
        },
        "description": {
          "@type": "string",
          "@value": "Parses event logs referencing STP role changes. "
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Events - STP Role Change\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"changed STP role\",\n  ignore_case: true\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"Port %{BASE10NUM:switch_port:INT} changed STP role from %{WORD:old_stp_role} to %{WORD:new_stp_role}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"issue\",\n    value : \"STP Role Change\",\n    prefix : \"meraki_\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "d6623776-f7aa-46ba-bb02-513746658910",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Airmarshal Events"
        },
        "description": {
          "@type": "string",
          "@value": "Parses out logs that contain airmarshal_events"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Airmarshal Events\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"airmarshal_events\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"type='%{WORD:airmarshal_event_type}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"ssid='%{DATA:ssid}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"bssid='%{COMMONMAC:bssid}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src='%{COMMONMAC:src_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst='%{COMMONMAC:dst_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"wired_mac='%{COMMONMAC:wired_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"vlan_id='%{DATA:vlan_id}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"channel='%{BASE10NUM:channel}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"rssi='%{BASE10NUM:rssi}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"fc_type='%{BASE10NUM:fc_type}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"fc_subtype='%{BASE10NUM:fc_subtype}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "event_definition",
        "version": "1"
      },
      "id": "e114728d-c5ca-46d1-86fc-00e160e4d899",
      "data": {
        "field_spec": {},
        "config": {
          "query_parameters": [],
          "search_within_ms": 600000,
          "query": {
            "@type": "string",
            "@value": "meraki_reason_description:\"Security disabled\""
          },
          "cron_expression": null,
          "cron_timezone": null,
          "use_cron_scheduling": false,
          "streams": [
            "09840169-d1b8-4f30-97b3-f989e98accd5"
          ],
          "execute_every_ms": 600000,
          "event_limit": 5,
          "group_by": [],
          "series": [],
          "conditions": {
            "expression": null
          },
          "type": "aggregation-v1",
          "stream_categories": [],
          "filters": []
        },
        "priority": {
          "@type": "integer",
          "@value": 2
        },
        "notifications": [],
        "remediation_steps": null,
        "matched_at": "2025-03-31T15:40:49.562Z",
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "notification_settings": {
          "grace_period_ms": 300000,
          "backlog_size": 0
        },
        "updated_at": "2025-03-31T16:00:59.706Z",
        "title": {
          "@type": "string",
          "@value": "Meraki - Reason Failures"
        },
        "is_scheduled": {
          "@type": "boolean",
          "@value": true
        },
        "key_spec": [],
        "storage": [
          {
            "type": "persist-to-streams-v1",
            "streams": [
              "000000000000000000000002"
            ]
          }
        ],
        "alert": {
          "@type": "boolean",
          "@value": false
        },
        "description": {
          "@type": "string",
          "@value": "Checks for reason codes of Security Disabled."
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "193066f4-290f-4e2e-92d1-9ec6212b90fd",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - dst_ip"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - dst_ip\"\nwhen\n  has_field(\n    field : \"meraki_dst_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_dst_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_dst_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "e6be811c-750a-464d-ab71-e32c29e495d9",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - client_ip"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - client_ip\"\nwhen\n  has_field(\n    field : \"meraki_client_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_client_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_client_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "ea1ae4d2-28f8-4c0f-8439-1a7a9c83eeb9",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - server_ip"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - server_ip\"\nwhen\n  has_field(\n    field : \"meraki_server_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_server_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_server_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "6fa8977c-30c8-44bc-b227-952569884ba2",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - urls_url_ip6"
        },
        "description": {
          "@type": "string",
          "@value": "Converts urls of an ipv6 address to the received url from original message."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - urls_url_ip6\"\nwhen\n  has_field(\n    field : \"meraki_url_ip6\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_url\"\n  );\n  let output_2 = to_string(\n    value : output_1\n  );\n  let output_3 = get_field(\n    field : \"meraki_url_ip6\"\n  );\n  let output_4 = to_string(\n    value : output_3\n  );\n  let output_5 = concat(\n    first : output_2,\n    second : \"[\"\n  );\n  let output_6 = concat(\n    first : output_5,\n    second : output_4\n  );\n  let output_7 = concat(\n    first : output_6,\n    second : \"]\"\n  );\n  let output_8 = get_field(\n    field : \"meraki_url_port\"\n  );\n  let output_9 = to_string(\n    value : output_8\n  );\n  let output_10 = concat(\n    first : output_7,\n    second : \":\"\n  );\n  let output_11 = concat(\n    first : output_10,\n    second : output_9\n  );\n  let output_12 = get_field(\n    field : \"meraki_url_path\"\n  );\n  let output_13 = to_string(\n    value : output_12\n  );\n  let output_14 = concat(\n    first : output_11,\n    second : output_13\n  );\n  set_field(\n    field : \"meraki_url\",\n    value : output_14\n  );\n  remove_single_field(\n    field : \"meraki_url_ip6\"\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_adapter",
        "version": "1"
      },
      "id": "d1fcf319-bbd5-44d1-b9e8-c95d7fb92237",
      "data": {
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - icmp6_type"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - icmp6_type"
        },
        "description": {
          "@type": "string",
          "@value": "Data adapter for meraki icmp6 type"
        },
        "configuration": {
          "value_column": {
            "@type": "string",
            "@value": "value"
          },
          "path": {
            "@type": "string",
            "@value": "/etc/graylog/files/icmp6_type.csv"
          },
          "cidr_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "separator": {
            "@type": "string",
            "@value": ","
          },
          "quotechar": {
            "@type": "string",
            "@value": "\""
          },
          "key_column": {
            "@type": "string",
            "@value": "key"
          },
          "case_insensitive_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "type": {
            "@type": "string",
            "@value": "csvfile"
          },
          "check_interval": {
            "@type": "long",
            "@value": 60
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "f542065a-e570-483f-82dc-1fd4c92c8fbe",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - UNIX Epoch Conversion with Timezone"
        },
        "description": {
          "@type": "string",
          "@value": "Converts UNIX timestamp from log to human readable. "
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - UNIX Epoch Conversion with Timezone\"\nwhen\n  has_field(\"meraki_epoch\")\nthen\n  // Step 1: Get raw epoch value as string\n  let raw_epoch_str = to_string(get_field(\"meraki_epoch\"));\n  //set_field(\"debug_raw_epoch_str\", raw_epoch_str);\n\n  // Step 2: Convert to floating-point number to handle decimals\n  let raw_epoch = to_double(raw_epoch_str);\n  //set_field(\"debug_raw_epoch\", raw_epoch);\n\n  // Step 3: Drop the decimal part and convert to whole seconds (round down)\n  let epoch_seconds = to_long(raw_epoch);  // Dropping the fractional part\n  //set_field(\"debug_epoch_seconds\", epoch_seconds);\n\n  // Step 4: Convert the epoch seconds to milliseconds\n  let epoch_ms = epoch_seconds * 1000;  // Convert to milliseconds\n  //set_field(\"debug_epoch_ms\", epoch_ms);\n\n  // Step 5: Use parse_unix_milliseconds to convert the epoch timestamp (milliseconds) to a date\n  let converted_date = parse_unix_milliseconds(epoch_ms, \"America/Los_Angeles\");\n // set_field(\"debug_converted_date_tz\", converted_date);\n\n  // Step 6: Store the correctly parsed and timezone-adjusted timestamp\n  set_field(\"meraki_timestamp\", converted_date);\nend\n"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_adapter",
        "version": "1"
      },
      "id": "dd649b03-bb6c-4f01-b3aa-11aaf214ac71",
      "data": {
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "name": {
          "@type": "string",
          "@value": "meraki-priority"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - priority"
        },
        "description": {
          "@type": "string",
          "@value": "Data adapter for priority"
        },
        "configuration": {
          "value_column": {
            "@type": "string",
            "@value": "value"
          },
          "path": {
            "@type": "string",
            "@value": "/etc/graylog/files/snort_priority.csv"
          },
          "cidr_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "separator": {
            "@type": "string",
            "@value": ","
          },
          "quotechar": {
            "@type": "string",
            "@value": "\""
          },
          "key_column": {
            "@type": "string",
            "@value": "key"
          },
          "case_insensitive_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "type": {
            "@type": "string",
            "@value": "csvfile"
          },
          "check_interval": {
            "@type": "long",
            "@value": 60
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "eccc24b3-ceee-44a4-93d5-1af205f7ef55",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - last_known_client_ip"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - last_known_client_ip\"\nwhen\n  has_field(\n    field : \"meraki_last_known_client_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\"\n  );\n  let output_1 = get_field(\n    field : \"meraki_last_known_client_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_last_known_client_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_table",
        "version": "1"
      },
      "id": "326fd286-8099-46a3-8335-270016d97d3d",
      "data": {
        "default_single_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "cache_name": {
          "@type": "string",
          "@value": "1dd0925c-3993-43fd-b313-31dd164812c5"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - icmp6_type"
        },
        "default_multi_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "default_multi_value": {
          "@type": "string",
          "@value": ""
        },
        "data_adapter_name": {
          "@type": "string",
          "@value": "d1fcf319-bbd5-44d1-b9e8-c95d7fb92237"
        },
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - icmp6_type"
        },
        "default_single_value": {
          "@type": "string",
          "@value": ""
        },
        "description": {
          "@type": "string",
          "@value": "Lookup table for converting icmp6_type to its description."
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "0b3b24c6-f296-49b1-9d7f-a64b38148dff",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - IDS Alerts"
        },
        "description": {
          "@type": "string",
          "@value": "Parses IDS Alert Logs"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - IDS Alerts\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"ids-alerts\",\n  ignore_case: true\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{DATA:category} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"signature=%{DATA:signature} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"priority=%{BASE10NUM:priority:INT} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"timestamp=%{BASE10NUM:event_epoch:DOUBLE}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"direction=%{WORD:direction}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"protocol=%{DATA:protocol} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src=%{IPV4:src_ip}:%{INT:src_port}|src=%{IPV6:src_ip}:%{INT:src_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"issue\",\n    value : \"IDS Alert\",\n    prefix : \"meraki_\"\n  );\n  remove_single_field(\n    field : \"meraki_IP\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_adapter",
        "version": "1"
      },
      "id": "f1d732fd-ae0c-406d-a6b9-dacc9e304163",
      "data": {
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - protocol"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - protocol"
        },
        "description": {
          "@type": "string",
          "@value": "Data adapter for meraki protocol type"
        },
        "configuration": {
          "value_column": {
            "@type": "string",
            "@value": "value"
          },
          "path": {
            "@type": "string",
            "@value": "/etc/graylog/files/protocol.csv"
          },
          "cidr_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "separator": {
            "@type": "string",
            "@value": ","
          },
          "quotechar": {
            "@type": "string",
            "@value": "\""
          },
          "key_column": {
            "@type": "string",
            "@value": "key"
          },
          "case_insensitive_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "type": {
            "@type": "string",
            "@value": "csvfile"
          },
          "check_interval": {
            "@type": "long",
            "@value": 60
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "2986e938-24fe-462d-8de0-de0a8dd8fc88",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - dns_server"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - dns_server\"\nwhen\n  has_field(\n    field : \"meraki_dns_server\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_dns_server\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_dns_server\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "583ce77d-4b6b-439c-883d-c898da195665",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Events - Two MACs Same IP"
        },
        "description": {
          "@type": "string",
          "@value": "Parses issues of two macs claiming the same IP address"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Events - Two MACs Same IP\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"events MAC \"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"events MAC %{COMMONMAC:mac1} and MAC %{COMMONMAC:mac2} both claim IP: %{IP:claimed_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"meraki_issue\",\n    value : \"Two MACs claim single IP\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "abcade98-89f0-4685-8c38-227a03ed6f36",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - radio"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - radio\"\nwhen\n  has_field(\n    field : \"meraki_radio\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_radio\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_radio\",\n    value : output_2\n  );\n  let gl2_fragment_extractor_1743547759943 = lookup_value(\"Meraki - radio\", to_string($message.\"meraki_radio\"));\nset_field(\"meraki_radio_description\", gl2_fragment_extractor_1743547759943);\n  let output_3 = gl2_fragment_extractor_1743547759943;\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_adapter",
        "version": "1"
      },
      "id": "bdf1e2ec-31f1-49db-bce5-60963dcebb80",
      "data": {
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - icmp_type"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - icmp_type"
        },
        "description": {
          "@type": "string",
          "@value": "Data adapter for meraki icmp type"
        },
        "configuration": {
          "value_column": {
            "@type": "string",
            "@value": "value"
          },
          "path": {
            "@type": "string",
            "@value": "/etc/graylog/files/icmp_type.csv"
          },
          "cidr_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "separator": {
            "@type": "string",
            "@value": ","
          },
          "quotechar": {
            "@type": "string",
            "@value": "\""
          },
          "key_column": {
            "@type": "string",
            "@value": "key"
          },
          "case_insensitive_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "type": {
            "@type": "string",
            "@value": "csvfile"
          },
          "check_interval": {
            "@type": "long",
            "@value": 60
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "f1a0bdf7-f3fc-41d9-bf2c-98c56b43917b",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Events - Content Filtering"
        },
        "description": {
          "@type": "string",
          "@value": "Parses event logs based around content filtering"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Events - Content Filtering\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"content_filtering\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category} %{WORD:filter_action}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"url='%{URI:url}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"server='%{IP:server}:%{BASE10NUM:server_port:INT}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"client_ip='%{IP:client_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"category0='%{DATA:filter_reason}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"category1='%{DATA:filter_subreason}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  rename_field(\n    old_field : \"meraki_HOSTNAME\",\n    new_field : \"meraki_url_hostname\"\n  );\n  rename_field(\n    old_field : \"meraki_IPORHOST\",\n    new_field : \"meraki_url_iporhost\"\n  );\n  rename_field(\n    old_field : \"meraki_URIHOST\",\n    new_field : \"meraki_url_urihost\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPATH\",\n    new_field : \"meraki_url_path\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPATHPARAM\",\n    new_field : \"meraki_url_uripathparam\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPROTO\",\n    new_field : \"meraki_url_protocol\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_adapter",
        "version": "1"
      },
      "id": "d7347bdc-a215-4d91-8683-18454fabf1f3",
      "data": {
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - FC Combined"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - FC Combined"
        },
        "description": {
          "@type": "string",
          "@value": "Combined frame control data."
        },
        "configuration": {
          "value_column": {
            "@type": "string",
            "@value": "value"
          },
          "path": {
            "@type": "string",
            "@value": "/etc/graylog/files/fc_combined.csv"
          },
          "cidr_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "separator": {
            "@type": "string",
            "@value": ","
          },
          "quotechar": {
            "@type": "string",
            "@value": "\""
          },
          "key_column": {
            "@type": "string",
            "@value": "key"
          },
          "case_insensitive_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "type": {
            "@type": "string",
            "@value": "csvfile"
          },
          "check_interval": {
            "@type": "long",
            "@value": 60
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "a74e293c-0b6f-4cc3-83a8-ec3173e91be7",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - icmp6_type"
        },
        "description": {
          "@type": "string",
          "@value": "Converts ICMP6 to its human readable description. "
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - icmp6_type\"\nwhen\n  contains(\n  value: to_string($message.\"meraki_protocol\"),\n  search: \"icmp6\",\n  ignore_case: true\n)\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_icmp_type\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_icmp_type\",\n    value : output_2\n  );\n  let gl2_fragment_extractor_1743543348834 = lookup_value(\"Meraki - icmp6_type\", to_string($message.\"meraki_icmp_type\"));\nset_field(\"meraki_icmp_type_description\", gl2_fragment_extractor_1743543348834);\n  let output_3 = gl2_fragment_extractor_1743543348834;\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "stream",
        "version": "1"
      },
      "id": "09840169-d1b8-4f30-97b3-f989e98accd5",
      "data": {
        "alarm_callbacks": [],
        "outputs": [],
        "remove_matches": {
          "@type": "boolean",
          "@value": true
        },
        "title": {
          "@type": "string",
          "@value": "Cisco Meraki"
        },
        "stream_rules": [
          {
            "type": {
              "@type": "string",
              "@value": "MATCH_INPUT"
            },
            "field": {
              "@type": "string",
              "@value": ""
            },
            "value": {
              "@type": "string",
              "@value": "67d327bb50f11e068c0b51eb"
            },
            "inverted": {
              "@type": "boolean",
              "@value": false
            },
            "description": {
              "@type": "string",
              "@value": ""
            }
          }
        ],
        "alert_conditions": [],
        "matching_type": {
          "@type": "string",
          "@value": "AND"
        },
        "disabled": {
          "@type": "boolean",
          "@value": false
        },
        "description": {
          "@type": "string",
          "@value": "Stream for containing all Meraki Logs"
        },
        "default_stream": {
          "@type": "boolean",
          "@value": false
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "b7a501d3-f2c3-41a6-93d1-b7cc84aefadd",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - peer"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - peer\"\nwhen\n  has_field(\n    field : \"meraki_peer\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_peer\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_peer\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "959dc4b1-3370-401a-bd6f-f4d81ea8c58b",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - rssi_signal_strength "
        },
        "description": {
          "@type": "string",
          "@value": "Converts rssi to signal strength in dB."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - rssi_signal_strength \"\nwhen\n    has_field(\"meraki_rssi\")\nthen\n  let rssi = to_long($message.meraki_rssi);\n  let signal_strength = rssi - 95;\n  set_field(\"meraki_signal_strength_db\", signal_strength);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "2f8d59db-1aeb-4eb0-8226-73dd8bc0ba9d",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Firewall"
        },
        "description": {
          "@type": "string",
          "@value": "Parses out firewall logs"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Firewall\"\nwhen\n  grok(\n  value: to_string($message.\"message\"),\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} firewall\"\n).matches == true\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src=%{IP:src_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst=%{IP:dst_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"protocol=%{WORD:protocol}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"mac=%{COMMONMAC:mac_address}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"sport=%{INT:src_port:INT}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dport=%{INT:dst_port:INT}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"pattern: %{GREEDYDATA:pattern}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "event_definition",
        "version": "1"
      },
      "id": "d8bc40a0-de10-46b5-a098-5b1f32053a45",
      "data": {
        "field_spec": {},
        "config": {
          "query_parameters": [],
          "search_within_ms": 300000,
          "query": {
            "@type": "string",
            "@value": "_exists_:meraki_dns_req_rtt_time"
          },
          "cron_expression": null,
          "cron_timezone": null,
          "use_cron_scheduling": false,
          "streams": [
            "09840169-d1b8-4f30-97b3-f989e98accd5"
          ],
          "execute_every_ms": 300000,
          "event_limit": 100,
          "group_by": [
            "meraki_dns_req_rtt_time"
          ],
          "series": [
            {
              "type": "avg",
              "id": "avg-meraki_dns_req_rtt_time",
              "field": "meraki_dns_req_rtt_time",
              "whole_number": false
            }
          ],
          "conditions": {
            "expression": {
              "expr": ">=",
              "left": {
                "expr": "number-ref",
                "ref": "avg-meraki_dns_req_rtt_time"
              },
              "right": {
                "expr": "number",
                "value": 0.25
              }
            }
          },
          "type": "aggregation-v1",
          "stream_categories": [],
          "filters": []
        },
        "priority": {
          "@type": "integer",
          "@value": 2
        },
        "notifications": [],
        "remediation_steps": null,
        "matched_at": "2025-04-15T20:59:59.502Z",
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "notification_settings": {
          "grace_period_ms": 300000,
          "backlog_size": 0
        },
        "updated_at": "2025-03-28T18:44:59.500Z",
        "title": {
          "@type": "string",
          "@value": "Meraki - High DNS Request Round-Trip Times"
        },
        "is_scheduled": {
          "@type": "boolean",
          "@value": true
        },
        "key_spec": [],
        "storage": [
          {
            "type": "persist-to-streams-v1",
            "streams": [
              "000000000000000000000002"
            ]
          }
        ],
        "alert": {
          "@type": "boolean",
          "@value": false
        },
        "description": {
          "@type": "string",
          "@value": "Alerts based on high average DNS Request Round-Trip Times."
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_adapter",
        "version": "1"
      },
      "id": "98d96929-a8fa-4c64-bf74-b07bf5c712a1",
      "data": {
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - band"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - band"
        },
        "description": {
          "@type": "string",
          "@value": "Data adapter for wireless band"
        },
        "configuration": {
          "value_column": {
            "@type": "string",
            "@value": "value"
          },
          "path": {
            "@type": "string",
            "@value": "/etc/graylog/files/band.csv"
          },
          "cidr_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "separator": {
            "@type": "string",
            "@value": ","
          },
          "quotechar": {
            "@type": "string",
            "@value": "\""
          },
          "key_column": {
            "@type": "string",
            "@value": "key"
          },
          "case_insensitive_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "type": {
            "@type": "string",
            "@value": "csvfile"
          },
          "check_interval": {
            "@type": "long",
            "@value": 60
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_table",
        "version": "1"
      },
      "id": "a6b348ca-6ce4-41ae-9181-13badb2a80d7",
      "data": {
        "default_single_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "cache_name": {
          "@type": "string",
          "@value": "1dd0925c-3993-43fd-b313-31dd164812c5"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - reason"
        },
        "default_multi_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "default_multi_value": {
          "@type": "string",
          "@value": ""
        },
        "data_adapter_name": {
          "@type": "string",
          "@value": "613860f2-edd0-4848-85b8-9cb1cea38fcb"
        },
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - reason"
        },
        "default_single_value": {
          "@type": "string",
          "@value": ""
        },
        "description": {
          "@type": "string",
          "@value": "Lookup table for Reason"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "event_definition",
        "version": "1"
      },
      "id": "ea75f17c-c59d-4122-8eb0-a4d3306b7a5a",
      "data": {
        "field_spec": {},
        "config": {
          "query_parameters": [],
          "search_within_ms": 300000,
          "query": {
            "@type": "string",
            "@value": "meraki_syslog_severity:Emergency"
          },
          "cron_expression": null,
          "cron_timezone": null,
          "use_cron_scheduling": false,
          "streams": [
            "09840169-d1b8-4f30-97b3-f989e98accd5"
          ],
          "execute_every_ms": 300000,
          "event_limit": 1,
          "group_by": [],
          "series": [],
          "conditions": {
            "expression": null
          },
          "type": "aggregation-v1",
          "stream_categories": [],
          "filters": []
        },
        "priority": {
          "@type": "integer",
          "@value": 3
        },
        "notifications": [],
        "remediation_steps": null,
        "matched_at": null,
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "notification_settings": {
          "grace_period_ms": 300000,
          "backlog_size": 0
        },
        "updated_at": "2025-04-07T22:58:57.273Z",
        "title": {
          "@type": "string",
          "@value": "Meraki - Syslog Severity"
        },
        "is_scheduled": {
          "@type": "boolean",
          "@value": true
        },
        "key_spec": [],
        "storage": [
          {
            "type": "persist-to-streams-v1",
            "streams": [
              "000000000000000000000002"
            ]
          }
        ],
        "alert": {
          "@type": "boolean",
          "@value": false
        },
        "description": {
          "@type": "string",
          "@value": "Checks for any Emergency level Syslog Messages."
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "33b2d729-46b9-4ed1-96b6-f55368df4bb2",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Events - FIPS Event"
        },
        "description": {
          "@type": "string",
          "@value": "Parses FIPS events."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Events - FIPS Event\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"type=fips_event\",\n  ignore_case: true\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"type=%{WORD:event_type}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"reason='%{DATA:fips_reason}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "cb723343-4d3a-480b-8c31-2f71568f4a32",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - UNIX Event Timestamp Conversion with Timezone"
        },
        "description": {
          "@type": "string",
          "@value": "Converts the security_event timestamp to human readable."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - UNIX Event Timestamp Conversion with Timezone\"\nwhen\n  has_field(\"meraki_event_timestamp\")\nthen\n  // Step 1: Get raw epoch value as string\n  let raw_epoch_str = to_string(get_field(\"meraki_event_timestamp\"));\n  //set_field(\"debug_raw_epoch_str\", raw_epoch_str);\n\n  // Step 2: Convert to floating-point number to handle decimals\n  let raw_epoch = to_double(raw_epoch_str);\n  //set_field(\"debug_raw_epoch\", raw_epoch);\n\n  // Step 3: Drop the decimal part and convert to whole seconds (round down)\n  let epoch_seconds = to_long(raw_epoch);  // Dropping the fractional part\n  //set_field(\"debug_epoch_seconds\", epoch_seconds);\n\n  // Step 4: Convert the epoch seconds to milliseconds\n  let epoch_ms = epoch_seconds * 1000;  // Convert to milliseconds\n  //set_field(\"debug_epoch_ms\", epoch_ms);\n\n  // Step 5: Use parse_unix_milliseconds to convert the epoch timestamp (milliseconds) to a date\n  let converted_date = parse_unix_milliseconds(epoch_ms, \"America/Los_Angeles\");\n // set_field(\"debug_converted_date_tz\", converted_date);\n\n  // Step 6: Store the correctly parsed and timezone-adjusted timestamp\n  set_field(\"meraki_event_timestamp_converted\", converted_date);\nend\n"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "5fcc9a4e-84ab-4edc-bae1-6d22a42479b1",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Events - Port Status Change"
        },
        "description": {
          "@type": "string",
          "@value": "Parses logs referencing Port Status Changes"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Events - Port Status Change\"\nwhen\n  grok(\n  value: to_string($message.\"message\"),\n  pattern: \"port %{BASE10NUM:port} status changed \"\n).matches == true\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"port %{BASE10NUM:switch_port:INT} status changed from %{DATA:old_status} to %{GREEDYDATA:new_status}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"issue\",\n    value : \"Port Status Change\",\n    prefix : \"meraki_\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline",
        "version": "1"
      },
      "id": "42026fcb-fe33-4bbd-a0d7-9650d09b4817",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Cisco Meraki"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "pipeline \"Cisco Meraki\"\nstage 0 match either\nrule \"Meraki - Extract Syslog PRI\"\nrule \"Meraki - Airmarshal Events\"\nrule \"Meraki - Events\"\nrule \"Meraki - Firewall\"\nrule \"Meraki - Flows\"\nrule \"Meraki - IP Flow\"\nrule \"Meraki - URLS\"\nrule \"Meraki - Events - Content Filtering\"\nrule \"Meraki - Events - DHCP No Offers\"\nrule \"Meraki - Events - FIPS Event\"\nrule \"Meraki - Events - Port Status Change\"\nrule \"Meraki - Events - Route Connection Change\"\nrule \"Meraki - Events - STP Role Change\"\nrule \"Meraki - Events - Two MACs Same IP\"\nrule \"Meraki - Events - APS Association\"\nrule \"Meraki - MAC Flap Detected\"\nrule \"Meraki - IDS Alerts\"\nrule \"Meraki - Security Event\"\nrule \"Meraki - Events - Blocked DHCP Server\"\nstage 2 match either\nrule \"Meraki - urls_url_ip6\"\nrule \"Meraki - protocol\"\nrule \"Meraki - frame_control\"\nrule \"Meraki - rssi_signal_strength \"\nrule \"Meraki - best_ap_rssi_signal_strength \"\nstage 1 match either\nrule \"Meraki - arp_src\"\nrule \"Meraki - band\"\nrule \"Meraki - dhcp_ip\"\nrule \"Meraki - dhcp_server\"\nrule \"Meraki - dns_server\"\nrule \"Meraki - dst_ip\"\nrule \"Meraki - epoch\"\nrule \"Meraki - ip_src\"\nrule \"Meraki - is_wpa\"\nrule \"Meraki - last_known_client_ip\"\nrule \"Meraki - radio\"\nrule \"Meraki - src_ip\"\nrule \"Meraki - translated_src_ip\"\nrule \"Meraki - UNIX Epoch Conversion with Timezone\"\nrule \"Meraki - last_known_client_ip6\"\nrule \"Meraki - client_ip\"\nrule \"Meraki - server\"\nrule \"Meraki - reason\"\nrule \"Meraki - best_ap\"\nrule \"Meraki - original_server_ip\"\nrule \"Meraki - server_ip\"\nrule \"Meraki - peer\"\nrule \"Meraki - icmp_type\"\nrule \"Meraki - icmp6_type\"\nrule \"Meraki - priority\"\nrule \"Meraki - UNIX Event Timestamp Conversion with Timezone\"\nend"
        },
        "connected_streams": [
          {
            "@type": "string",
            "@value": "09840169-d1b8-4f30-97b3-f989e98accd5"
          }
        ]
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "9170f21a-b895-4363-8d7b-53f1cd6649d5",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - dhcp_server"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - dhcp_server\"\nwhen\n  has_field(\n    field : \"meraki_dhcp_server\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\"\n  );\n  let output_1 = get_field(\n    field : \"meraki_dhcp_server\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_dhcp_server\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "097abacc-4e81-4e23-a7b8-3a531f001da1",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - icmp_type"
        },
        "description": {
          "@type": "string",
          "@value": "Converts ICMP codes to human readable"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - icmp_type\"\nwhen\n  has_field(\n    field : \"meraki_icmp_type\"\n  )\n  AND\n  ! contains(\n  value: to_string($message.\"meraki_protocol\"),\n  search: \"icmp6\",\n  ignore_case: true\n)\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_icmp_type\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_icmp_type\",\n    value : output_2\n  );\n  let gl2_fragment_extractor_1743543348834 = lookup_value(\"Meraki - icmp_type\", to_string($message.\"meraki_icmp_type\"));\nset_field(\"meraki_icmp_type_description\", gl2_fragment_extractor_1743543348834);\n  let output_3 = gl2_fragment_extractor_1743543348834;\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "865f9b07-bf3a-4f45-9779-f925cf433295",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - last_known_client_ip6"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - last_known_client_ip6\"\nwhen\n  has_field(\n    field : \"meraki_last_known_client_ip6\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_last_known_client_ip6\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_last_known_client_ip6\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "9291a048-91cc-4878-a9bc-2080976898f3",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - dhcp_ip"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - dhcp_ip\"\nwhen\n  has_field(\n    field : \"meraki_dhcp_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_dhcp_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_dhcp_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_adapter",
        "version": "1"
      },
      "id": "5face7a0-ca9f-4e4b-8502-081cabe32726",
      "data": {
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "name": {
          "@type": "string",
          "@value": "meraki-wpa"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - WPA"
        },
        "description": {
          "@type": "string",
          "@value": "Converts 0 or 1 to human readable. "
        },
        "configuration": {
          "value_column": {
            "@type": "string",
            "@value": "value"
          },
          "path": {
            "@type": "string",
            "@value": "/etc/graylog/files/is_wpa.csv"
          },
          "cidr_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "separator": {
            "@type": "string",
            "@value": ","
          },
          "quotechar": {
            "@type": "string",
            "@value": "\""
          },
          "key_column": {
            "@type": "string",
            "@value": "key"
          },
          "case_insensitive_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "type": {
            "@type": "string",
            "@value": "csvfile"
          },
          "check_interval": {
            "@type": "long",
            "@value": 60
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_table",
        "version": "1"
      },
      "id": "add1ab38-b2cf-4ff7-bb53-43974754637e",
      "data": {
        "default_single_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "cache_name": {
          "@type": "string",
          "@value": "1dd0925c-3993-43fd-b313-31dd164812c5"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - FC Combined"
        },
        "default_multi_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "default_multi_value": {
          "@type": "string",
          "@value": ""
        },
        "data_adapter_name": {
          "@type": "string",
          "@value": "d7347bdc-a215-4d91-8683-18454fabf1f3"
        },
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - FC Combined"
        },
        "default_single_value": {
          "@type": "string",
          "@value": ""
        },
        "description": {
          "@type": "string",
          "@value": "Maps the frame control type and subtype"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "input",
        "version": "1"
      },
      "id": "85a18737-3948-4eb2-919e-69bdcd481435",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Cisco Meraki"
        },
        "configuration": {
          "recv_buffer_size": {
            "@type": "integer",
            "@value": 262144
          },
          "port": {
            "@type": "integer",
            "@value": 1514
          },
          "number_worker_threads": {
            "@type": "integer",
            "@value": 10
          },
          "charset_name": {
            "@type": "string",
            "@value": "UTF-8"
          },
          "bind_address": {
            "@type": "string",
            "@value": "0.0.0.0"
          }
        },
        "static_fields": {},
        "type": {
          "@type": "string",
          "@value": "org.graylog2.inputs.raw.udp.RawUDPInput"
        },
        "global": {
          "@type": "boolean",
          "@value": true
        },
        "extractors": []
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_adapter",
        "version": "1"
      },
      "id": "613860f2-edd0-4848-85b8-9cb1cea38fcb",
      "data": {
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "name": {
          "@type": "string",
          "@value": "meraki-reason"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - reason"
        },
        "description": {
          "@type": "string",
          "@value": "Data adapter for meraki reason"
        },
        "configuration": {
          "value_column": {
            "@type": "string",
            "@value": "value"
          },
          "path": {
            "@type": "string",
            "@value": "/etc/graylog/files/reason.csv"
          },
          "cidr_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "separator": {
            "@type": "string",
            "@value": ","
          },
          "quotechar": {
            "@type": "string",
            "@value": "\""
          },
          "key_column": {
            "@type": "string",
            "@value": "key"
          },
          "case_insensitive_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "type": {
            "@type": "string",
            "@value": "csvfile"
          },
          "check_interval": {
            "@type": "long",
            "@value": 60
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_table",
        "version": "1"
      },
      "id": "4dfe3e07-858f-43b4-a054-d5c4a8fe68ef",
      "data": {
        "default_single_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "cache_name": {
          "@type": "string",
          "@value": "1dd0925c-3993-43fd-b313-31dd164812c5"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - priority"
        },
        "default_multi_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "default_multi_value": {
          "@type": "string",
          "@value": ""
        },
        "data_adapter_name": {
          "@type": "string",
          "@value": "dd649b03-bb6c-4f01-b3aa-11aaf214ac71"
        },
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - priority"
        },
        "default_single_value": {
          "@type": "string",
          "@value": ""
        },
        "description": {
          "@type": "string",
          "@value": "Lookup table for snort priority table"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "3a86f91b-ac03-40eb-aabf-463684645ce1",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Events - Blocked DHCP Server"
        },
        "description": {
          "@type": "string",
          "@value": "Parses logs for Blocked DHCP Servers"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Events - Blocked DHCP Server\"\nwhen\n  grok(\n  value: to_string($message.\"message\"),\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category} Blocked DHCP server \"\n).matches == true\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category} Blocked DHCP server response from %{COMMONMAC:blocked_dhcp_mac} on VLAN %{BASE10NUM:vlan:INT}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"issue\",\n    value : \"Blocked DHCP Server\",\n    prefix : \"meraki_\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "dashboard",
        "version": "2"
      },
      "id": "1bf21e91-9256-47b2-b446-23001a4a6549",
      "data": {
        "summary": {
          "@type": "string",
          "@value": "Meraki logs"
        },
        "search": {
          "queries": [
            {
              "id": "3ce0f07f-aff7-4e8a-a2ae-91875b183dde",
              "timerange": {
                "from": 300,
                "type": "relative"
              },
              "filters": [],
              "query": {
                "type": "elasticsearch",
                "query_string": ""
              },
              "search_types": [
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "from": 86400,
                    "type": "relative"
                  },
                  "column_limit": null,
                  "streams": [
                    "09840169-d1b8-4f30-97b3-f989e98accd5"
                  ],
                  "row_limit": null,
                  "series": [
                    {
                      "type": "count",
                      "id": "count(meraki_event_type)",
                      "field": "meraki_event_type"
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "fields": [
                        "meraki_event_type"
                      ],
                      "limit": 15,
                      "skip_empty_values": true
                    }
                  ],
                  "type": "pivot",
                  "stream_categories": [],
                  "id": "a5651760-2c57-4993-9e7d-934cab147297",
                  "filters": [],
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "from": 86400,
                    "type": "relative"
                  },
                  "column_limit": null,
                  "streams": [
                    "09840169-d1b8-4f30-97b3-f989e98accd5"
                  ],
                  "row_limit": null,
                  "series": [
                    {
                      "type": "count",
                      "id": "count(meraki_syslog_severity)",
                      "field": "meraki_syslog_severity"
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "fields": [
                        "meraki_syslog_severity"
                      ],
                      "limit": 15,
                      "skip_empty_values": true
                    }
                  ],
                  "type": "pivot",
                  "stream_categories": [],
                  "id": "3efbec63-2c60-46e4-9a77-0d4be57e4a0c",
                  "filters": [],
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "from": 86400,
                    "type": "relative"
                  },
                  "column_limit": null,
                  "streams": [
                    "09840169-d1b8-4f30-97b3-f989e98accd5"
                  ],
                  "row_limit": null,
                  "series": [
                    {
                      "type": "count",
                      "id": "count(meraki_airmarshal_event_type)",
                      "field": "meraki_airmarshal_event_type"
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "fields": [
                        "meraki_airmarshal_event_type"
                      ],
                      "limit": 15,
                      "skip_empty_values": true
                    }
                  ],
                  "type": "pivot",
                  "stream_categories": [],
                  "id": "f54aeec0-204d-4044-8ac1-24a7a2bae0e7",
                  "filters": [],
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "from": 86400,
                    "type": "relative"
                  },
                  "column_limit": null,
                  "streams": [
                    "09840169-d1b8-4f30-97b3-f989e98accd5"
                  ],
                  "row_limit": null,
                  "series": [
                    {
                      "type": "count",
                      "id": "count(meraki_action_taken)",
                      "field": "meraki_action_taken"
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "fields": [
                        "meraki_action_taken"
                      ],
                      "limit": 15,
                      "skip_empty_values": true
                    }
                  ],
                  "type": "pivot",
                  "stream_categories": [],
                  "id": "6ebab2fb-4c1f-49ea-b047-1cc449686176",
                  "filters": [],
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "from": 86400,
                    "type": "relative"
                  },
                  "column_limit": null,
                  "streams": [
                    "09840169-d1b8-4f30-97b3-f989e98accd5"
                  ],
                  "row_limit": null,
                  "series": [
                    {
                      "type": "count",
                      "id": "count(meraki_category)",
                      "field": "meraki_category"
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "fields": [
                        "meraki_category"
                      ],
                      "limit": 15,
                      "skip_empty_values": false
                    }
                  ],
                  "type": "pivot",
                  "stream_categories": [],
                  "id": "00856c7e-5473-4bb8-983a-c390b1870568",
                  "filters": [],
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "from": 3600,
                    "type": "relative"
                  },
                  "column_limit": null,
                  "streams": [
                    "09840169-d1b8-4f30-97b3-f989e98accd5"
                  ],
                  "row_limit": null,
                  "series": [
                    {
                      "type": "avg",
                      "id": "DHCP Response Time",
                      "field": "meraki_dhcp_resp_time",
                      "whole_number": false
                    },
                    {
                      "type": "avg",
                      "id": "DNS Round Trip Time",
                      "field": "meraki_dns_req_rtt_time",
                      "whole_number": false
                    },
                    {
                      "type": "avg",
                      "id": "DNS Response Time",
                      "field": "meraki_dns_resp_time",
                      "whole_number": false
                    },
                    {
                      "type": "avg",
                      "id": "DNS Req Round Trip Time",
                      "field": "meraki_dns_req_rtt_time",
                      "whole_number": false
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "time",
                      "fields": [
                        "timestamp"
                      ],
                      "interval": {
                        "type": "auto",
                        "scaling": 1
                      }
                    }
                  ],
                  "type": "pivot",
                  "stream_categories": [],
                  "id": "d9a8929b-f250-46c2-b237-81224a334b06",
                  "filters": [],
                  "column_groups": [],
                  "sort": []
                }
              ]
            },
            {
              "id": "68d83277-6b5f-401d-86cf-7df864fd8ecf",
              "timerange": {
                "from": 300,
                "type": "relative"
              },
              "filters": [],
              "query": {
                "type": "elasticsearch",
                "query_string": ""
              },
              "search_types": [
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "meraki_filter_action:content_filtering_block"
                  },
                  "name": "chart",
                  "timerange": {
                    "range": 0,
                    "type": "relative"
                  },
                  "column_limit": null,
                  "streams": [
                    "09840169-d1b8-4f30-97b3-f989e98accd5"
                  ],
                  "row_limit": null,
                  "series": [
                    {
                      "type": "count",
                      "id": "Total Hits",
                      "field": "meraki_url"
                    },
                    {
                      "type": "percentage",
                      "id": "Percentage of Total",
                      "strategy": "COUNT",
                      "field": "meraki_url"
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "fields": [
                        "meraki_url",
                        "meraki_filter_reason"
                      ],
                      "limit": 25,
                      "skip_empty_values": false
                    }
                  ],
                  "type": "pivot",
                  "stream_categories": [],
                  "id": "12a1cac0-eb74-45d2-b91d-e850d81272b2",
                  "filters": [],
                  "column_groups": [],
                  "sort": [
                    {
                      "type": "series",
                      "field": "count(meraki_url)",
                      "direction": "Descending"
                    }
                  ]
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "meraki_filter_action:content_filtering_block"
                  },
                  "name": null,
                  "timerange": {
                    "range": 0,
                    "type": "relative"
                  },
                  "offset": 0,
                  "streams": [
                    "09840169-d1b8-4f30-97b3-f989e98accd5"
                  ],
                  "filter": null,
                  "decorators": [],
                  "type": "messages",
                  "stream_categories": [],
                  "id": "4242de24-d0eb-4795-85d3-c3a19b99736e",
                  "limit": 150,
                  "filters": []
                }
              ]
            },
            {
              "id": "40774a0d-c721-414f-bae8-5473bdc891bd",
              "timerange": {
                "from": 300,
                "type": "relative"
              },
              "filters": [],
              "query": {
                "type": "elasticsearch",
                "query_string": ""
              },
              "search_types": [
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "from": 86400,
                    "type": "relative"
                  },
                  "column_limit": null,
                  "streams": [
                    "09840169-d1b8-4f30-97b3-f989e98accd5"
                  ],
                  "row_limit": null,
                  "series": [
                    {
                      "type": "count",
                      "id": "Total Issues",
                      "field": "meraki_issue"
                    },
                    {
                      "type": "percentage",
                      "id": "Percentage of Total",
                      "strategy": "COUNT",
                      "field": "meraki_issue"
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "fields": [
                        "meraki_issue"
                      ],
                      "limit": 15,
                      "skip_empty_values": true
                    }
                  ],
                  "type": "pivot",
                  "stream_categories": [],
                  "id": "0a7358ad-70ed-49a3-bc42-b0c3283db5cb",
                  "filters": [],
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "meraki_event_type:\"martian_vlan\""
                  },
                  "name": null,
                  "timerange": {
                    "from": 86400,
                    "type": "relative"
                  },
                  "offset": 0,
                  "streams": [
                    "09840169-d1b8-4f30-97b3-f989e98accd5"
                  ],
                  "filter": null,
                  "decorators": [],
                  "type": "messages",
                  "stream_categories": [],
                  "id": "d13cd07d-4419-45bd-aec2-6f9b41098c30",
                  "limit": 150,
                  "filters": []
                }
              ]
            },
            {
              "id": "c650fdda-5500-4885-bf0b-43c93273e86b",
              "timerange": {
                "from": 300,
                "type": "relative"
              },
              "filters": [],
              "query": {
                "type": "elasticsearch",
                "query_string": ""
              },
              "search_types": [
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "from": 300,
                    "type": "relative"
                  },
                  "column_limit": null,
                  "streams": [
                    "09840169-d1b8-4f30-97b3-f989e98accd5"
                  ],
                  "row_limit": null,
                  "series": [
                    {
                      "type": "avg",
                      "id": "Signal Strength",
                      "field": "meraki_signal_strength_db",
                      "whole_number": false
                    },
                    {
                      "type": "avg",
                      "id": "Best AP Signal Strength",
                      "field": "meraki_best_ap_signal_strength_db",
                      "whole_number": false
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "fields": [
                        "meraki_host"
                      ],
                      "limit": 15,
                      "skip_empty_values": true
                    }
                  ],
                  "type": "pivot",
                  "stream_categories": [],
                  "id": "5fac8ad0-8558-463f-93e8-8b1a5fdee633",
                  "filters": [],
                  "column_groups": [],
                  "sort": []
                }
              ]
            }
          ],
          "parameters": [],
          "requires": {},
          "owner": "kbrown",
          "created_at": "2025-04-10T17:37:43.716Z"
        },
        "created_at": "2025-03-19T20:21:35.428Z",
        "requires": {},
        "state": {
          "3ce0f07f-aff7-4e8a-a2ae-91875b183dde": {
            "selected_fields": null,
            "static_message_list_id": null,
            "titles": {
              "widget": {
                "587ef1cf-6886-413e-b074-f0ee26f6cb46": "Message Table",
                "dff65622-c6e3-455e-b341-1f7ed61e90f6": "DNS Req R",
                "32ba85ea-086b-4f23-a22d-b0cfa80db88b": "Event Actions Taken",
                "14bba717-5b3b-40f8-a191-ee744a4b78e4": "Event Types",
                "be46012b-04cb-4d05-8b87-2620c9895781": "Syslog Facility and Priority",
                "0044022b-1bbe-488a-a366-77a24eae572f": "Events by Category",
                "b242c0a2-cca0-4564-a53d-9ba2e4f8a8b0": "Syslog Severity",
                "4b86c586-6824-4308-8fc3-fa932dedc433": "Airmarshal Events",
                "3bfdb11b-cfac-4110-9af0-9706f53f35bc": "Avg DHCP Response Time",
                "4e86be0a-5608-436b-b5b7-efe2e31eccc1": "Avg Response Times",
                "552e967d-f51a-47ac-bb5e-8015bdb4080a": " Message Count"
              },
              "tab": {
                "title": "Response Times and Events"
              }
            },
            "widgets": [
              {
                "config": {
                  "visualization": "pie",
                  "units": {},
                  "column_limit": null,
                  "event_annotation": false,
                  "row_limit": 15,
                  "row_pivots": [
                    {
                      "fields": [
                        "meraki_action_taken"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 15,
                        "skip_empty_values": true
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": null
                      },
                      "function": "count(meraki_action_taken)"
                    }
                  ],
                  "rollup": false,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": null,
                  "sort": []
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "timerange": {
                  "from": 86400,
                  "type": "relative"
                },
                "streams": [
                  "09840169-d1b8-4f30-97b3-f989e98accd5"
                ],
                "filter": null,
                "type": "aggregation",
                "stream_categories": [],
                "id": "32ba85ea-086b-4f23-a22d-b0cfa80db88b",
                "filters": []
              },
              {
                "config": {
                  "visualization": "pie",
                  "units": {},
                  "column_limit": null,
                  "event_annotation": false,
                  "row_limit": 15,
                  "row_pivots": [
                    {
                      "fields": [
                        "meraki_airmarshal_event_type"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 15,
                        "skip_empty_values": true
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": null
                      },
                      "function": "count(meraki_airmarshal_event_type)"
                    }
                  ],
                  "rollup": false,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": null,
                  "sort": []
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "timerange": {
                  "from": 86400,
                  "type": "relative"
                },
                "streams": [
                  "09840169-d1b8-4f30-97b3-f989e98accd5"
                ],
                "filter": null,
                "type": "aggregation",
                "stream_categories": [],
                "id": "4b86c586-6824-4308-8fc3-fa932dedc433",
                "filters": []
              },
              {
                "config": {
                  "visualization": "line",
                  "units": {},
                  "column_limit": null,
                  "event_annotation": false,
                  "row_limit": null,
                  "row_pivots": [
                    {
                      "fields": [
                        "timestamp"
                      ],
                      "type": "time",
                      "config": {
                        "interval": {
                          "type": "auto",
                          "scaling": 1
                        }
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": "DHCP Response Time"
                      },
                      "function": "avg(meraki_dhcp_resp_time)"
                    },
                    {
                      "config": {
                        "name": "DNS Round Trip Time"
                      },
                      "function": "avg(meraki_dns_req_rtt_time)"
                    },
                    {
                      "config": {
                        "name": "DNS Response Time"
                      },
                      "function": "avg(meraki_dns_resp_time)"
                    },
                    {
                      "config": {
                        "name": "DNS Req Round Trip Time"
                      },
                      "function": "avg(meraki_dns_req_rtt_time)"
                    }
                  ],
                  "rollup": true,
                  "column_pivots": [],
                  "visualization_config": {
                    "interpolation": "linear",
                    "axis_type": "linear"
                  },
                  "formatting_settings": null,
                  "sort": []
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "timerange": {
                  "from": 3600,
                  "type": "relative"
                },
                "streams": [
                  "09840169-d1b8-4f30-97b3-f989e98accd5"
                ],
                "filter": null,
                "type": "aggregation",
                "stream_categories": [],
                "id": "4e86be0a-5608-436b-b5b7-efe2e31eccc1",
                "filters": []
              },
              {
                "config": {
                  "visualization": "pie",
                  "units": {},
                  "column_limit": null,
                  "event_annotation": false,
                  "row_limit": 15,
                  "row_pivots": [
                    {
                      "fields": [
                        "meraki_category"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 15
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": null
                      },
                      "function": "count(meraki_category)"
                    }
                  ],
                  "rollup": false,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": null,
                  "sort": []
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "timerange": {
                  "from": 86400,
                  "type": "relative"
                },
                "streams": [
                  "09840169-d1b8-4f30-97b3-f989e98accd5"
                ],
                "filter": null,
                "type": "aggregation",
                "stream_categories": [],
                "id": "0044022b-1bbe-488a-a366-77a24eae572f",
                "filters": []
              },
              {
                "config": {
                  "visualization": "pie",
                  "units": {},
                  "column_limit": null,
                  "event_annotation": false,
                  "row_limit": 15,
                  "row_pivots": [
                    {
                      "fields": [
                        "meraki_syslog_severity"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 15,
                        "skip_empty_values": true
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": null
                      },
                      "function": "count(meraki_syslog_severity)"
                    }
                  ],
                  "rollup": false,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": null,
                  "sort": []
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "timerange": {
                  "from": 86400,
                  "type": "relative"
                },
                "streams": [
                  "09840169-d1b8-4f30-97b3-f989e98accd5"
                ],
                "filter": null,
                "type": "aggregation",
                "stream_categories": [],
                "id": "b242c0a2-cca0-4564-a53d-9ba2e4f8a8b0",
                "filters": []
              },
              {
                "config": {
                  "visualization": "pie",
                  "units": {},
                  "column_limit": null,
                  "event_annotation": false,
                  "row_limit": 15,
                  "row_pivots": [
                    {
                      "fields": [
                        "meraki_event_type"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 15,
                        "skip_empty_values": true
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": null
                      },
                      "function": "count(meraki_event_type)"
                    }
                  ],
                  "rollup": false,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": null,
                  "sort": []
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "timerange": {
                  "from": 86400,
                  "type": "relative"
                },
                "streams": [
                  "09840169-d1b8-4f30-97b3-f989e98accd5"
                ],
                "filter": null,
                "type": "aggregation",
                "stream_categories": [],
                "id": "14bba717-5b3b-40f8-a191-ee744a4b78e4",
                "filters": []
              }
            ],
            "widget_mapping": {
              "b242c0a2-cca0-4564-a53d-9ba2e4f8a8b0": [
                "3efbec63-2c60-46e4-9a77-0d4be57e4a0c"
              ],
              "4b86c586-6824-4308-8fc3-fa932dedc433": [
                "f54aeec0-204d-4044-8ac1-24a7a2bae0e7"
              ],
              "14bba717-5b3b-40f8-a191-ee744a4b78e4": [
                "a5651760-2c57-4993-9e7d-934cab147297"
              ],
              "4e86be0a-5608-436b-b5b7-efe2e31eccc1": [
                "d9a8929b-f250-46c2-b237-81224a334b06"
              ],
              "32ba85ea-086b-4f23-a22d-b0cfa80db88b": [
                "6ebab2fb-4c1f-49ea-b047-1cc449686176"
              ],
              "0044022b-1bbe-488a-a366-77a24eae572f": [
                "00856c7e-5473-4bb8-983a-c390b1870568"
              ]
            },
            "positions": {
              "32ba85ea-086b-4f23-a22d-b0cfa80db88b": {
                "col": 1,
                "row": 9,
                "height": 4,
                "width": 6
              },
              "14bba717-5b3b-40f8-a191-ee744a4b78e4": {
                "col": 7,
                "row": 1,
                "height": 4,
                "width": 6
              },
              "0044022b-1bbe-488a-a366-77a24eae572f": {
                "col": 1,
                "row": 1,
                "height": 4,
                "width": 6
              },
              "b242c0a2-cca0-4564-a53d-9ba2e4f8a8b0": {
                "col": 7,
                "row": 9,
                "height": 4,
                "width": 6
              },
              "4b86c586-6824-4308-8fc3-fa932dedc433": {
                "col": 7,
                "row": 5,
                "height": 4,
                "width": 6
              },
              "4e86be0a-5608-436b-b5b7-efe2e31eccc1": {
                "col": 1,
                "row": 5,
                "height": 4,
                "width": 6
              }
            },
            "formatting": {
              "highlighting": []
            },
            "display_mode_settings": {
              "positions": {}
            }
          },
          "68d83277-6b5f-401d-86cf-7df864fd8ecf": {
            "selected_fields": null,
            "static_message_list_id": null,
            "titles": {
              "widget": {
                "2d67edd2-582a-417a-a615-9953bc361e8b": "Message Count",
                "5b82ceb1-b053-4107-b0fa-6bbfa7211268": "Issue Counts",
                "39b4f656-4031-44ec-80f9-b0b12ab830d1": "Dissassociation Reasons",
                "daa1e2da-4a33-40ec-b088-6c8c5c456011": "Blocked URLs",
                "ec34e501-78b2-4c3b-bcba-7a846bd96e17": "Top Blocked URL's"
              },
              "tab": {
                "title": "URLs"
              }
            },
            "widgets": [
              {
                "config": {
                  "visualization": "table",
                  "units": {},
                  "column_limit": null,
                  "event_annotation": false,
                  "row_limit": 25,
                  "row_pivots": [
                    {
                      "fields": [
                        "meraki_url",
                        "meraki_filter_reason"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 25,
                        "skip_empty_values": false
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": "Total Hits"
                      },
                      "function": "count(meraki_url)"
                    },
                    {
                      "config": {
                        "name": "Percentage of Total"
                      },
                      "function": "percentage(meraki_url)"
                    }
                  ],
                  "rollup": false,
                  "column_pivots": [],
                  "visualization_config": {
                    "pinned_columns": []
                  },
                  "formatting_settings": null,
                  "sort": [
                    {
                      "type": "series",
                      "field": "count(meraki_url)",
                      "direction": "Descending"
                    }
                  ]
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": "meraki_filter_action:content_filtering_block"
                },
                "timerange": {
                  "range": 0,
                  "type": "relative"
                },
                "streams": [
                  "09840169-d1b8-4f30-97b3-f989e98accd5"
                ],
                "filter": null,
                "type": "aggregation",
                "stream_categories": [],
                "id": "ec34e501-78b2-4c3b-bcba-7a846bd96e17",
                "filters": []
              },
              {
                "config": {
                  "fields": [
                    "timestamp",
                    "source"
                  ],
                  "units": {},
                  "show_message_row": true,
                  "show_summary": true,
                  "decorators": [],
                  "sort": [
                    {
                      "type": "pivot",
                      "field": "timestamp",
                      "direction": "Descending"
                    }
                  ]
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": "meraki_filter_action:content_filtering_block"
                },
                "timerange": {
                  "range": 0,
                  "type": "relative"
                },
                "streams": [
                  "09840169-d1b8-4f30-97b3-f989e98accd5"
                ],
                "filter": null,
                "type": "messages",
                "stream_categories": [],
                "id": "daa1e2da-4a33-40ec-b088-6c8c5c456011",
                "filters": []
              }
            ],
            "widget_mapping": {
              "ec34e501-78b2-4c3b-bcba-7a846bd96e17": [
                "12a1cac0-eb74-45d2-b91d-e850d81272b2"
              ],
              "daa1e2da-4a33-40ec-b088-6c8c5c456011": [
                "4242de24-d0eb-4795-85d3-c3a19b99736e"
              ]
            },
            "positions": {
              "daa1e2da-4a33-40ec-b088-6c8c5c456011": {
                "col": 1,
                "row": 5,
                "height": 4,
                "width": "Infinity"
              },
              "ec34e501-78b2-4c3b-bcba-7a846bd96e17": {
                "col": 1,
                "row": 1,
                "height": 4,
                "width": "Infinity"
              }
            },
            "formatting": {
              "highlighting": []
            },
            "display_mode_settings": {
              "positions": {}
            }
          },
          "40774a0d-c721-414f-bae8-5473bdc891bd": {
            "selected_fields": null,
            "static_message_list_id": null,
            "titles": {
              "widget": {
                "c10eb3e1-64a3-48d8-8916-625ec2f31fd8": "Issues Totals",
                "c62e0dec-744b-4fb7-8c4b-90454542836a": "Martan VLAN"
              },
              "tab": {
                "title": "Security"
              }
            },
            "widgets": [
              {
                "config": {
                  "fields": [
                    "timestamp",
                    "source"
                  ],
                  "units": {},
                  "show_message_row": true,
                  "show_summary": true,
                  "decorators": [],
                  "sort": [
                    {
                      "type": "pivot",
                      "field": "timestamp",
                      "direction": "Descending"
                    }
                  ]
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": "meraki_event_type:\"martian_vlan\""
                },
                "timerange": {
                  "from": 86400,
                  "type": "relative"
                },
                "streams": [
                  "09840169-d1b8-4f30-97b3-f989e98accd5"
                ],
                "filter": null,
                "type": "messages",
                "stream_categories": [],
                "id": "c62e0dec-744b-4fb7-8c4b-90454542836a",
                "filters": []
              },
              {
                "config": {
                  "visualization": "table",
                  "units": {},
                  "column_limit": null,
                  "event_annotation": false,
                  "row_limit": 15,
                  "row_pivots": [
                    {
                      "fields": [
                        "meraki_issue"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 15,
                        "skip_empty_values": true
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": "Total Issues"
                      },
                      "function": "count(meraki_issue)"
                    },
                    {
                      "config": {
                        "name": "Percentage of Total"
                      },
                      "function": "percentage(meraki_issue)"
                    }
                  ],
                  "rollup": false,
                  "column_pivots": [],
                  "visualization_config": {
                    "pinned_columns": []
                  },
                  "formatting_settings": null,
                  "sort": []
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "timerange": {
                  "from": 86400,
                  "type": "relative"
                },
                "streams": [
                  "09840169-d1b8-4f30-97b3-f989e98accd5"
                ],
                "filter": null,
                "type": "aggregation",
                "stream_categories": [],
                "id": "c10eb3e1-64a3-48d8-8916-625ec2f31fd8",
                "filters": []
              }
            ],
            "widget_mapping": {
              "c10eb3e1-64a3-48d8-8916-625ec2f31fd8": [
                "0a7358ad-70ed-49a3-bc42-b0c3283db5cb"
              ],
              "c62e0dec-744b-4fb7-8c4b-90454542836a": [
                "d13cd07d-4419-45bd-aec2-6f9b41098c30"
              ]
            },
            "positions": {
              "c10eb3e1-64a3-48d8-8916-625ec2f31fd8": {
                "col": 1,
                "row": 1,
                "height": 4,
                "width": 4
              },
              "c62e0dec-744b-4fb7-8c4b-90454542836a": {
                "col": 5,
                "row": 1,
                "height": 4,
                "width": 6
              }
            },
            "formatting": {
              "highlighting": []
            },
            "display_mode_settings": {
              "positions": {}
            }
          },
          "c650fdda-5500-4885-bf0b-43c93273e86b": {
            "selected_fields": null,
            "static_message_list_id": null,
            "titles": {
              "tab": {
                "title": "Wireless"
              },
              "widget": {
                "f8f3ebd4-9c5e-4b0c-a38d-7b66fed2a54f": "Avg Signal Strength in dB"
              }
            },
            "widgets": [
              {
                "config": {
                  "visualization": "bar",
                  "units": {},
                  "column_limit": null,
                  "event_annotation": false,
                  "row_limit": 15,
                  "row_pivots": [
                    {
                      "fields": [
                        "meraki_host"
                      ],
                      "type": "values",
                      "config": {
                        "limit": 15,
                        "skip_empty_values": true
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": "Signal Strength"
                      },
                      "function": "avg(meraki_signal_strength_db)"
                    },
                    {
                      "config": {
                        "name": "Best AP Signal Strength"
                      },
                      "function": "avg(meraki_best_ap_signal_strength_db)"
                    }
                  ],
                  "rollup": false,
                  "column_pivots": [],
                  "visualization_config": {
                    "barmode": "group",
                    "axis_type": "linear"
                  },
                  "formatting_settings": null,
                  "sort": []
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "timerange": {
                  "from": 300,
                  "type": "relative"
                },
                "streams": [
                  "09840169-d1b8-4f30-97b3-f989e98accd5"
                ],
                "filter": null,
                "type": "aggregation",
                "stream_categories": [],
                "id": "f8f3ebd4-9c5e-4b0c-a38d-7b66fed2a54f",
                "filters": []
              }
            ],
            "widget_mapping": {
              "f8f3ebd4-9c5e-4b0c-a38d-7b66fed2a54f": [
                "5fac8ad0-8558-463f-93e8-8b1a5fdee633"
              ]
            },
            "positions": {
              "f8f3ebd4-9c5e-4b0c-a38d-7b66fed2a54f": {
                "col": 1,
                "row": 1,
                "height": 5,
                "width": "Infinity"
              }
            },
            "formatting": {
              "highlighting": []
            },
            "display_mode_settings": {
              "positions": {}
            }
          }
        },
        "properties": [],
        "owner": "admin",
        "title": {
          "@type": "string",
          "@value": "Cisco Meraki"
        },
        "type": "DASHBOARD",
        "description": {
          "@type": "string",
          "@value": ""
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "cf9afab1-bf13-4efc-af85-15dc0dc63cce",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Events - APS Association"
        },
        "description": {
          "@type": "string",
          "@value": "Parses logs for the aps_association"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Events - APS Association\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"type=aps_association\",\n  ignore_case: true\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"type=%{WORD:event_type}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"load='%{BASE10NUM:load:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"best_ap='%{IP:best_ap}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"best_ap_load='%{BASE10NUM:best_ap_load:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"best_ap_rssi='%{BASE10NUM:best_ap_rssi:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\n  remove_single_field(\n    field : \"meraki_IP\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "2470f5d1-5ae7-4dd5-a95e-bff930bd63b4",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - best_ap_rssi_signal_strength "
        },
        "description": {
          "@type": "string",
          "@value": "Converts best_ap_rssi to its Signal Strength in dB"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - best_ap_rssi_signal_strength \"\nwhen\n    has_field(\"meraki_best_ap_rssi\")\nthen\n  let rssi = to_long($message.meraki_best_ap_rssi);\n  let signal_strength = rssi - 95;\n  set_field(\"meraki_best_ap_signal_strength_db\", signal_strength);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "6b350a12-95a9-40b7-a6e8-79bcc8c96232",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - translated_src_ip"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - translated_src_ip\"\nwhen\n  has_field(\n    field : \"meraki_translated_src_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_translated_src_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_translated_src_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "f79d29b8-5973-4ffe-a389-c88285486c29",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - URLS"
        },
        "description": {
          "@type": "string",
          "@value": "Parses URLS logs"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - URLS\"\nwhen\n  grok(\n  value: to_string($message.\"message\"),\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} urls\"\n).matches == true\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src=%{IP:src_ip}:%{INT:src_port}|src=\\\\[%{IPV6:src_ip}\\\\]:%{INT:src_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst=%{IP:dst_ip}:%{INT:dst_port}|dst=\\\\[%{IPV6:dst_ip}\\\\]:%{INT:dst_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"mac=%{COMMONMAC:mac_address}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"request: %{WORD:request} %{URI:url}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"request: %{WORD:http_method} %{URIPROTO:url_protocol}://\\\\[%{IPV6:url_ip6}\\\\]:(%{INT:url_port})%{URIPATH:url_path}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"agent='%{DATA:agent}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  rename_field(\n    old_field : \"meraki_HOSTNAME\",\n    new_field : \"meraki_url_hostname\"\n  );\n  rename_field(\n    old_field : \"meraki_IPORHOST\",\n    new_field : \"meraki_url_iporhost\"\n  );\n  rename_field(\n    old_field : \"meraki_URIHOST\",\n    new_field : \"meraki_url_urihost\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPATH\",\n    new_field : \"meraki_url_path\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPATHPARAM\",\n    new_field : \"meraki_url_uripathparam\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPROTO\",\n    new_field : \"meraki_url_protocol\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPARAM\",\n    new_field : \"meraki_url_uriparam\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\n  remove_single_field(\n    field : \"meraki_IP\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "fb677a6c-92ea-4950-a279-249a574a1cae",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Extract Syslog PRI"
        },
        "description": {
          "@type": "string",
          "@value": "Parses out syslog severity and facility"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Extract Syslog PRI\"\nwhen\n    has_field(\"message\")\nthen\n  set_fields(\n    grok(\n      pattern: \"<%{NONNEGINT:meraki_syslog_severity:int}>\",\n      value: to_string($message.message),\n      only_named_captures: true\n    )\n  ); \n\n  // Get numeric parts\n  let priority = expand_syslog_priority(to_long($message.meraki_syslog_severity));\n  set_field(\"meraki_facility\", priority.facility);\n  set_field(\"meraki_severity\", priority.level);\n\n  // Get string descriptions\n  let expanded = expand_syslog_priority_as_string(to_long($message.meraki_syslog_severity));\n  set_field(\"meraki_facility_description\", expanded.facility);\n  set_field(\"meraki_severity_description\", expanded.level);\nend\n"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "58ae3342-bc39-4cfb-bdde-aaccc9983009",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - MAC Flap Detected"
        },
        "description": {
          "@type": "string",
          "@value": "Parses logs for MAC flap detections"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - MAC Flap Detected\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"mac_flap_detected\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"issue\",\n    value : \"MAC Flap Detected\",\n    prefix : \"meraki_\"\n  );\n  let gl2_fragment_grok_results = grok(\n  pattern: \"mac='%{COMMONMAC:mac_address}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"vlan='%{BASE10NUM:vlan}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"port='%{DATA:port}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_table",
        "version": "1"
      },
      "id": "9ada5440-59ad-4d5a-9925-09c3ac8abad7",
      "data": {
        "default_single_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "cache_name": {
          "@type": "string",
          "@value": "1dd0925c-3993-43fd-b313-31dd164812c5"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - radio"
        },
        "default_multi_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "default_multi_value": {
          "@type": "string",
          "@value": ""
        },
        "data_adapter_name": {
          "@type": "string",
          "@value": "75435cc3-6dcd-469c-8477-bcd9b08d10bf"
        },
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - radio"
        },
        "default_single_value": {
          "@type": "string",
          "@value": ""
        },
        "description": {
          "@type": "string",
          "@value": "Lookup table for radio"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_table",
        "version": "1"
      },
      "id": "7ec592e6-2730-4f6e-b21b-7ecfd914bbd9",
      "data": {
        "default_single_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "cache_name": {
          "@type": "string",
          "@value": "1dd0925c-3993-43fd-b313-31dd164812c5"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - is_wpa"
        },
        "default_multi_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "default_multi_value": {
          "@type": "string",
          "@value": ""
        },
        "data_adapter_name": {
          "@type": "string",
          "@value": "5face7a0-ca9f-4e4b-8502-081cabe32726"
        },
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - is_wpa"
        },
        "default_single_value": {
          "@type": "string",
          "@value": ""
        },
        "description": {
          "@type": "string",
          "@value": "Mapping  is_wpa for Meraki"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_adapter",
        "version": "1"
      },
      "id": "75435cc3-6dcd-469c-8477-bcd9b08d10bf",
      "data": {
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - radio"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - radio"
        },
        "description": {
          "@type": "string",
          "@value": "Data adapter for meraki radio"
        },
        "configuration": {
          "value_column": {
            "@type": "string",
            "@value": "value"
          },
          "path": {
            "@type": "string",
            "@value": "/etc/graylog/files/radio.csv"
          },
          "cidr_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "separator": {
            "@type": "string",
            "@value": ","
          },
          "quotechar": {
            "@type": "string",
            "@value": "\""
          },
          "key_column": {
            "@type": "string",
            "@value": "key"
          },
          "case_insensitive_lookup": {
            "@type": "boolean",
            "@value": false
          },
          "type": {
            "@type": "string",
            "@value": "csvfile"
          },
          "check_interval": {
            "@type": "long",
            "@value": 60
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_table",
        "version": "1"
      },
      "id": "baff264b-5786-4679-a200-7ca24b64f9be",
      "data": {
        "default_single_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "cache_name": {
          "@type": "string",
          "@value": "1dd0925c-3993-43fd-b313-31dd164812c5"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - icmp_type"
        },
        "default_multi_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "default_multi_value": {
          "@type": "string",
          "@value": ""
        },
        "data_adapter_name": {
          "@type": "string",
          "@value": "bdf1e2ec-31f1-49db-bce5-60963dcebb80"
        },
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - icmp_type"
        },
        "default_single_value": {
          "@type": "string",
          "@value": ""
        },
        "description": {
          "@type": "string",
          "@value": "Lookup table for converting icmp_type to its description."
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "5def192f-53c7-4ace-967e-671f042dbe12",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - src_ip"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - src_ip\"\nwhen\n  has_field(\n    field : \"meraki_src_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_src_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_src_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "2d4d962e-bdae-441e-9cd9-5ccae299e500",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Events"
        },
        "description": {
          "@type": "string",
          "@value": "Parses out meraki event logs"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Events\"\nwhen\n  grok(\n  value: to_string($message.\"message\"),\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoc} %{DATA:host} events\"\n).matches == true\n  AND\n  ! contains(\n  value: to_string($message.\"message\"),\n  search: \"fips_event\"\n)\n  AND\n  ! contains(\n  value: to_string($message.\"message\"),\n  search: \"aps_association\",\n  ignore_case: true\n)\n  AND\n  ! contains(\n  value: to_string($message.\"message\"),\n  search: \"Blocked DHCP server\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"type=%{WORD:event_type}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"type='%{WORD:action_taken}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"radio='%{BASE10NUM:radio:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"vap='%{BASE10NUM:vap:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"client_mac='%{COMMONMAC:client_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"band='%{BASE10NUM:band:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"channel='%{BASE10NUM:channel:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"da_vendor='%{WORD:da_vendor}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"duration='%{BASE10NUM:duration:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"auth_neg_dur='%{BASE10NUM:auth_neg_dur:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"last_auth_ago='%{BASE10NUM:last_auth_ago:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"is_wpa='%{BASE10NUM:is_wpa:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"full_conn='%{BASE10NUM:full_conn_time:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"ip_resp='%{BASE10NUM:ip_resp_time:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"ip_src='%{IP:src_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"arp_resp='%{BASE10NUM:arp_resp_time:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"arp_src='%{IP:arp_src}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dns_server='%{IP:dns_server}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dns_req_rtt='%{BASE10NUM:dns_req_rtt_time:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dns_resp='%{BASE10NUM:dns_resp_time:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"aid='%{BASE10NUM:aid:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"group='%{DATA:group}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"attr='%{DATA:attr}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"instigator='%{DATA:instigator}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dhcp_lease_completed='%{BASE10NUM:dhcp_lease_completed:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dhcp_ip='%{IP:dhcp_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dhcp_server='%{IP:dhcp_server}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dhcp_server_mac='%{COMMONMAC:dhcp_server_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dhcp_resp='%{BASE10NUM:dhcp_resp_time:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"last_known_client_ip='%{IPV4:last_known_client_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"rssi='%{BASE10NUM:rssi:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"http_resp='%{BASE10NUM:http_resp_time:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"ssid='%{DATA:ssid}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"bssid='%{DATA:bssid}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src='%{IP:src_ip}'|src='%{COMMONMAC:src_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst='%{DATA:dst_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"wired_mac='%{DATA:wired_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"vlan_id='%{DATA:vlan_id}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"fc_type='%{BASE10NUM:fc_type:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"fc_subtype='%{BASE10NUM:fc_subtype:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"reason='%{DATA:reason}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"last_known_client_ip6='%{IPV6:last_known_client_ip6}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"da_reason='%{BASE10NUM:da_reason:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"da_subreason='%{BASE10NUM:da_subreason:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"(?i)vlan='%{BASE10NUM:vlan:INT}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"MAC='%{COMMONMAC:mac_address}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"port='%{DATA:port}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"(?i)client='%{IP:client_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"(?i)details='%{DATA:details}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"summary='%{DATA:summary}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"vpn_type='%{DATA:vpn_type}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"connectivity='%{DATA:connectivity}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"load='%{BASE10NUM:load:DOUBLE}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"original_server_ip='%{IP:original_server_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"original_server_mac='%{COMMONMAC:original_server_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"server_ip='%{IP:server_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"server_mac='%{COMMONMAC:server_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\n  remove_single_field(\n    field : \"meraki_IP\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_table",
        "version": "1"
      },
      "id": "053b744e-e120-4d0d-8bed-4180e504077e",
      "data": {
        "default_single_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "cache_name": {
          "@type": "string",
          "@value": "1dd0925c-3993-43fd-b313-31dd164812c5"
        },
        "name": {
          "@type": "string",
          "@value": "Meraki - protocol"
        },
        "default_multi_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "default_multi_value": {
          "@type": "string",
          "@value": ""
        },
        "data_adapter_name": {
          "@type": "string",
          "@value": "f1d732fd-ae0c-406d-a6b9-dacc9e304163"
        },
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "title": {
          "@type": "string",
          "@value": "Meraki - protocol"
        },
        "default_single_value": {
          "@type": "string",
          "@value": ""
        },
        "description": {
          "@type": "string",
          "@value": "Lookup table for meraki protocol"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "cca31b68-7bb5-442d-b5da-b183a896a16f",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - band"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - band\"\nwhen\n  has_field(\n    field : \"meraki_band\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_band\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_band\",\n    value : output_2\n  );\n  let gl2_fragment_extractor_1744212374563 = lookup_value(\"Meraki - band\", to_string($message.\"meraki_band\"));\nset_field(\"meraki_band_description\", gl2_fragment_extractor_1744212374563);\n  let output_3 = gl2_fragment_extractor_1744212374563;\n  set_field(\n    field : \"meraki_band_description\",\n    value : output_3\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "b4eaab39-238a-47f2-b325-3fbd397e4489",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - epoch"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - epoch\"\nwhen\n  has_field(\n    field : \"meraki_epoch\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_epoch\"\n  );\n  let output_2 = to_string(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_epoch\",\n    value : output_1\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "stream",
        "version": "1"
      },
      "id": "2b1a6152-2c4b-4765-8a58-950e621f8a07",
      "data": {
        "alarm_callbacks": [],
        "outputs": [],
        "remove_matches": {
          "@type": "boolean",
          "@value": true
        },
        "title": {
          "@type": "string",
          "@value": "Field Type Conversion"
        },
        "stream_rules": [],
        "alert_conditions": [],
        "matching_type": {
          "@type": "string",
          "@value": "AND"
        },
        "disabled": {
          "@type": "boolean",
          "@value": false
        },
        "description": {
          "@type": "string",
          "@value": "Stream to handle field type conversions"
        },
        "default_stream": {
          "@type": "boolean",
          "@value": false
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "e42f1ade-168e-4ced-b8ab-344b868235cc",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Events - DHCP No Offers"
        },
        "description": {
          "@type": "string",
          "@value": "Parses event for no dhcp offers to a mac address"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Events - DHCP No Offers\"\nwhen\n  grok(\n  value: to_string($message.\"message\"),\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category} (?i)dhcp\"\n).matches == true\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"(?i)dhcp no offers for mac %{COMMONMAC:mac_address}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"issue\",\n    value : \"No DHCP Offers\",\n    prefix : \"meraki_\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "149954ba-a1df-4944-90cb-5d6443e2d719",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - server"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - server\"\nwhen\n  has_field(\n    field : \"meraki_server\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_server\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_server\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "f9aae99f-5b5e-4685-bd8a-146dadccee18",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - best_ap"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - best_ap\"\nwhen\n  has_field(\n    field : \"meraki_best_ap\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_best_ap\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_best_ap\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "ca473d0c-c2f0-4891-8ad9-8ed622e30c6d",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - reason"
        },
        "description": {
          "@type": "string",
          "@value": "Converts disassociation codes to human readable (802.11 Dissociation Codes)"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - reason\"\nwhen\n  has_field(\n    field : \"meraki_reason\"\n  )\n  AND\n  contains(\n  value: to_string($message.\"meraki_event_type\"),\n  search: \"disassociation\"\n)\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let gl2_fragment_grok_results = grok(\n  pattern: \"%{BASE10NUM:reason}\",\n  value: to_string($message.\"meraki_reason\"),\n  only_named_captures: true\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\",\n  suffix: \"_num\"\n);\n  let gl2_fragment_extractor_1743831166804 = lookup_value(\"Meraki - reason\", to_string($message.\"meraki_reason_num\"));\nset_field(\"meraki_reason_description\", gl2_fragment_extractor_1743831166804);\n  let output_1 = gl2_fragment_extractor_1743831166804;\n  remove_single_field(\n    field : \"meraki_reason_num\"\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "22691187-44f0-4ea8-b16c-96d7c7f5eb63",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - Security Event"
        },
        "description": {
          "@type": "string",
          "@value": "Parses Security Event logs."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - Security Event\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"security_event\",\n  ignore_case: true\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority:INT}>%{BASE10NUM:syslog_ver:INT} %{BASE10NUM:epoch} %{DATA:host} %{DATA:category} %{DATA:subcategory} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"issue\",\n    value : \"Security Event\",\n    prefix : \"meraki_\"\n  );\n  let gl2_fragment_grok_results = grok(\n  pattern: \"signature=%{DATA:signature} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"priority=%{BASE10NUM:priority:INT} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"timestamp=%{BASE10NUM:event_timestamp:DOUBLE} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dhost=%{COMMONMAC:mac_address} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"direction=%{WORD:direction} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"protocol=%{DATA:protocol} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src=%{IPV4:src_ip}:%{INT:src_port} |src=%{IPV6:src_ip}:%{INT:src_port} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst=%{IPV4:dst_ip}:%{INT:dst_port} |src=%{IPV6:dst_ip}:%{INT:dst_port} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"decision=%{WORD:decision} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"action=%{WORD:action}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"message: %{GREEDYDATA:message} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"mac=%{COMMONMAC:mac_address} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"name='%{DATA:file_name}' |name=%{DATA:file_name} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"sha256=%{DATA:sha256} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"disposition=%{WORD:disposition}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"url=%{URI:url} \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  rename_field(\n    old_field : \"meraki_HOSTNAME\",\n    new_field : \"meraki_url_hostname\"\n  );\n  rename_field(\n    old_field : \"meraki_IPORHOST\",\n    new_field : \"meraki_url_iporhost\"\n  );\n  rename_field(\n    old_field : \"meraki_URIHOST\",\n    new_field : \"meraki_url_urihost\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPATH\",\n    new_field : \"meraki_url_uripath\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPATHPARAM\",\n    new_field : \"meraki_url_uripathparam\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPROTO\",\n    new_field : \"meraki_url_uriproto\"\n  );\n  remove_single_field(\n    field : \"meraki_IP\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "d61a8abe-d82c-46f4-af7d-346f1f8dfead",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Meraki - is_wpa"
        },
        "description": {
          "@type": "string",
          "@value": "Converts specified Field to correct type."
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Meraki - is_wpa\"\nwhen\n  has_field(\n    field : \"meraki_is_wpa\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_is_wpa\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_is_wpa\",\n    value : output_2\n  );\n  let gl2_fragment_extractor_1744212374563 = lookup_value(\"Meraki - is_wpa\", to_string($message.\"meraki_is_wpa\"));\nset_field(\"meraki_is_wpa_description\", gl2_fragment_extractor_1744212374563);\n  let output_3 = gl2_fragment_extractor_1744212374563;\n  set_field(\n    field : \"meraki_is_wpa_description\",\n    value : output_3\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_cache",
        "version": "1"
      },
      "id": "1dd0925c-3993-43fd-b313-31dd164812c5",
      "data": {
        "_scope": {
          "@type": "string",
          "@value": "DEFAULT"
        },
        "name": {
          "@type": "string",
          "@value": "generic-cache"
        },
        "title": {
          "@type": "string",
          "@value": "Generic Cache"
        },
        "description": {
          "@type": "string",
          "@value": "Generic, local only in memory cache"
        },
        "configuration": {
          "type": {
            "@type": "string",
            "@value": "guava_cache"
          },
          "max_size": {
            "@type": "integer",
            "@value": 1000
          },
          "expire_after_access": {
            "@type": "long",
            "@value": 60
          },
          "expire_after_access_unit": {
            "@type": "string",
            "@value": "SECONDS"
          },
          "expire_after_write": {
            "@type": "long",
            "@value": 0
          },
          "ignore_null": {
            "@type": "boolean",
            "@value": false
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=6.1.10+a308be3"
        }
      ]
    }
  ]
}