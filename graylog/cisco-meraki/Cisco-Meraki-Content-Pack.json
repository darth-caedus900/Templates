{
    "v": 1,
    "id": "d4d9d652-2d93-4566-bc6c-e775de968829",
    "rev": 1,
    "name": "Cisco Meraki",
    "summary": "Takes in raw Cisco Meraki Logs and extracts the fields. Uses port 1514",
    "description": "Receives Cisco Meraki syslogs and extracts the various fields then converts them in a separate stream to the appropriate field type and then sends them back to the original stream to keep the stream pipelines clean. The \"Meraki - UNIX Epoch Conversion with Timezone\" will need to be edited. Change \"America/Los_Angeles\" to the appropriate timezone for your location. View the GitHub instructions.md file for more information like adding the lookup tables, etc.",
    "vendor": "kbrown900",
    "url": "https://github.com/kbrown900/Templates/blob/main/graylog/cisco-meraki/Cisco-Meraki-Content-Pack.json",
    "parameters": [],
    "entities": [
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "c65bc3c3-082e-4e8a-9830-59fc9718acef",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - duration"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - duration\"\nwhen\n  has_field(\n    field : \"meraki_duration\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_duration\"\n  );\n  let output_2 = to_double(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_duration\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "ea8acb36-eb94-475e-823a-813f805a6d49",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - frame_control"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - frame_control\"\nwhen\n  has_field(\n    field : \"meraki_fc_type\"\n  )\n  AND\n  has_field(\n    field : \"meraki_fc_subtype\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_fc_type\"\n  );\n  let output_2 = get_field(\n    field : \"meraki_fc_subtype\"\n  );\n  let output_3 = to_string(\n    value : output_1\n  );\n  let output_4 = to_string(\n    value : output_2\n  );\n  let output_5 = concat(\n    first : output_3,\n    second : \"_\"\n  );\n  let output_6 = concat(\n    first : output_5,\n    second : output_4\n  );\n  set_field(\n    field : \"meraki_fc_combined\",\n    value : output_6\n  );\n  let gl2_fragment_extractor_1743194726951 = lookup_value(\"Meraki - FC Combined\", to_string($message.\"meraki_fc_combined\"));\nset_field(\"meraki_frame_control\", gl2_fragment_extractor_1743194726951);\n  let output_7 = gl2_fragment_extractor_1743194726951;\n  set_field(\n    field : \"meraki_frame_control\",\n    value : output_7\n  );\n  remove_single_field(\n    field : \"meraki_fc_combined\"\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "37f961c0-9447-42cd-b9c8-e02028796811",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - original_server_ip"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - original_server_ip\"\nwhen\n  has_field(\n    field : \"meraki_original_server_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_original_server_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_original_server_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "15e6ad16-9af9-447f-9107-4912555ed1b4",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - channel"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - channel\"\nwhen\n  has_field(\n    field : \"meraki_channel\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_channel\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_channel\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "2d072f9f-be5b-4f78-aaaf-93676017ea71",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - fc_type"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - fc_type\"\nwhen\n  has_field(\n    field : \"meraki_fc_type\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\"\n  );\n  let output_1 = get_field(\n    field : \"meraki_fc_type\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_fc_type\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "54b7c459-b4a6-4328-bdb7-6990792890cf",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - switch_port"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - switch_port\"\nwhen\n  has_field(\n    field : \"meraki_switch_port\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_switch_port\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_switch_port\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "74b6818c-30ba-4d39-abad-a58565d3d0d0",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - vlan"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - vlan\"\nwhen\n  has_field(\n    field : \"meraki_vlan\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_vlan\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"vlan\",\n    value : output_2,\n    prefix : \"meraki_\"\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_table",
          "version": "1"
        },
        "id": "7bfcfd40-429c-4404-9c4f-7460d5804a1b",
        "data": {
          "default_single_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "cache_name": {
            "@type": "string",
            "@value": "0baf39f2-1887-43a0-a949-ce5bd293006e"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki - band"
          },
          "default_multi_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "default_multi_value": {
            "@type": "string",
            "@value": ""
          },
          "data_adapter_name": {
            "@type": "string",
            "@value": "c7b71991-ebef-4750-9db6-f41f34e1b621"
          },
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - band"
          },
          "default_single_value": {
            "@type": "string",
            "@value": ""
          },
          "description": {
            "@type": "string",
            "@value": "Lookup table for wireless band"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "event_definition",
          "version": "1"
        },
        "id": "d4de07f0-af04-4b22-8dd0-2945bd78af48",
        "data": {
          "field_spec": {},
          "config": {
            "query_parameters": [],
            "search_within_ms": 300000,
            "query": {
              "@type": "string",
              "@value": "meraki_event_type:\"martian_vlan\""
            },
            "cron_expression": null,
            "cron_timezone": null,
            "use_cron_scheduling": false,
            "streams": [],
            "execute_every_ms": 60000,
            "event_limit": 100,
            "group_by": [],
            "series": [
              {
                "type": "count",
                "id": "count-meraki_event_type",
                "field": "meraki_event_type"
              }
            ],
            "conditions": {
              "expression": {
                "expr": ">=",
                "left": {
                  "expr": "number-ref",
                  "ref": "count-meraki_event_type"
                },
                "right": {
                  "expr": "number",
                  "value": 5
                }
              }
            },
            "type": "aggregation-v1",
            "stream_categories": [],
            "filters": []
          },
          "priority": {
            "@type": "integer",
            "@value": 2
          },
          "notifications": [],
          "remediation_steps": null,
          "matched_at": "2025-04-03T21:05:44.338Z",
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "notification_settings": {
            "grace_period_ms": 300000,
            "backlog_size": 0
          },
          "updated_at": "2025-03-28T22:19:43.936Z",
          "title": {
            "@type": "string",
            "@value": "Meraki - Martian VLAN Detection"
          },
          "is_scheduled": {
            "@type": "boolean",
            "@value": true
          },
          "key_spec": [],
          "storage": [
            {
              "type": "persist-to-streams-v1",
              "streams": [
                "000000000000000000000002"
              ]
            }
          ],
          "alert": {
            "@type": "boolean",
            "@value": false
          },
          "description": {
            "@type": "string",
            "@value": "Triggers an alert when a martian_vlan event is detected from a device."
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "dda138c5-844d-45b1-9dec-1eaecbb8e1a1",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Flows"
          },
          "description": {
            "@type": "string",
            "@value": " Parses out flows logs"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Flows\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"flows\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category} %{WORD:action}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src=%{IP:src_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst=%{IP:dst_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"mac=%{COMMONMAC:mac_address}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"protocol=%{WORD:protocol}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"sport=%{INT:src_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dport=%{INT:dst_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"type=%{BASE10NUM:icmp_type}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "77483fc1-4c95-433f-a275-7261b1b16e03",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - IP Flow"
          },
          "description": {
            "@type": "string",
            "@value": "Parses logs containing ip_flow"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - IP Flow\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"ip_flow\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src=%{IP:src_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst=%{IP:dst_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"protocol=%{WORD:protocol}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"sport=%{INT:src_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dport=%{INT:dst_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"translated_src_ip=%{IP:translated_src_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"translated_port=%{INT:translated_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "40796076-e2e9-4781-9ea5-c5e9c3a77b8d",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - ip_src"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - ip_src\"\nwhen\n  has_field(\n    field : \"meraki_ip_src\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\"\n  );\n  let output_1 = get_field(\n    field : \"meraki_ip_src\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_ip_src\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "7b8a1e71-6595-4321-8a0d-4071fb0be895",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - arp_src"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - arp_src\"\nwhen\n  has_field(\n    field : \"meraki_arp_src\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\"\n  );\n  let output_1 = get_field(\n    field : \"meraki_arp_src\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_arp_src\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "e1287f57-aaf1-4c82-a7e7-3bda780cec40",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Events - Route Connection Change"
          },
          "description": {
            "@type": "string",
            "@value": "Parses route connection change logs"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Events - Route Connection Change\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"route_connection_change\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category} type=%{DATA:event_type} peer_type='%{DATA:peer_type}' \",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"peer='%{IP:peer}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"connection_status='%{WORD:connection_status}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "8ca2e6e6-3b2a-4d6d-96f2-c9d5846a7624",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Events - STP Role Change"
          },
          "description": {
            "@type": "string",
            "@value": "Parses event logs referencing STP role changes. "
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Events - STP Role Change\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"changed STP role\",\n  ignore_case: true\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"Port %{BASE10NUM:switch_port} changed STP role from %{WORD:old_stp_role} to %{WORD:new_stp_role}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"issue\",\n    value : \"STP Role Change\",\n    prefix : \"meraki_\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "0c2dd60d-d6ed-4521-a691-cc89726787df",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Airmarshal Events"
          },
          "description": {
            "@type": "string",
            "@value": "Parses out logs that contain airmarshal_events"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Airmarshal Events\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"airmarshal_events\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"type='%{WORD:airmarshal_event_type}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"ssid='%{DATA:ssid}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"bssid='%{COMMONMAC:bssid}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src='%{COMMONMAC:src_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst='%{COMMONMAC:dst_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"wired_mac='%{COMMONMAC:wired_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"vlan_id='%{DATA:vlan_id}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"channel='%{BASE10NUM:channel}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"rssi='%{BASE10NUM:rssi}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"fc_type='%{BASE10NUM:fc_type}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"fc_subtype='%{BASE10NUM:fc_subtype}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "f83e6204-d248-4082-adf0-2d3919612a8d",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - full_conn_time"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - full_conn_time\"\nwhen\n  has_field(\n    field : \"meraki_full_conn_time\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_full_conn_time\"\n  );\n  let output_2 = to_double(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_full_conn_time\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_adapter",
          "version": "1"
        },
        "id": "a97e27df-2b4b-4083-bd59-a6db6f2ce95f",
        "data": {
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "name": {
            "@type": "string",
            "@value": "facility-mapping"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - Facility Mapping"
          },
          "description": {
            "@type": "string",
            "@value": "Maps Meraki Facility to its actuals"
          },
          "configuration": {
            "value_column": {
              "@type": "string",
              "@value": "value"
            },
            "path": {
              "@type": "string",
              "@value": "/etc/graylog/files/facility.csv"
            },
            "cidr_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "separator": {
              "@type": "string",
              "@value": ","
            },
            "quotechar": {
              "@type": "string",
              "@value": "\""
            },
            "key_column": {
              "@type": "string",
              "@value": "key"
            },
            "case_insensitive_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "type": {
              "@type": "string",
              "@value": "csvfile"
            },
            "check_interval": {
              "@type": "long",
              "@value": 60
            }
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "event_definition",
          "version": "1"
        },
        "id": "2726793b-dbbf-41ea-9114-77c58d7eb9b1",
        "data": {
          "field_spec": {},
          "config": {
            "query_parameters": [],
            "search_within_ms": 600000,
            "query": {
              "@type": "string",
              "@value": "meraki_reason_description:\"Security disabled\""
            },
            "cron_expression": null,
            "cron_timezone": null,
            "use_cron_scheduling": false,
            "streams": [
              "33bfcf8b-b272-4edf-94b6-f9378286eac4"
            ],
            "execute_every_ms": 600000,
            "event_limit": 5,
            "group_by": [],
            "series": [],
            "conditions": {
              "expression": null
            },
            "type": "aggregation-v1",
            "stream_categories": [],
            "filters": []
          },
          "priority": {
            "@type": "integer",
            "@value": 2
          },
          "notifications": [],
          "remediation_steps": null,
          "matched_at": "2025-03-31T15:40:49.562Z",
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "notification_settings": {
            "grace_period_ms": 300000,
            "backlog_size": 0
          },
          "updated_at": "2025-03-31T16:00:59.706Z",
          "title": {
            "@type": "string",
            "@value": "Meraki - Reason Failures"
          },
          "is_scheduled": {
            "@type": "boolean",
            "@value": true
          },
          "key_spec": [],
          "storage": [
            {
              "type": "persist-to-streams-v1",
              "streams": [
                "000000000000000000000002"
              ]
            }
          ],
          "alert": {
            "@type": "boolean",
            "@value": false
          },
          "description": {
            "@type": "string",
            "@value": "Checks for reason codes of Security Disabled."
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "bc1da83d-2b8b-4009-a54a-850f2a782abb",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - dst_ip"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - dst_ip\"\nwhen\n  has_field(\n    field : \"meraki_dst_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_dst_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_dst_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "ca2a09a2-3124-4496-9a81-f7594238a96f",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - client_ip"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - client_ip\"\nwhen\n  has_field(\n    field : \"meraki_client_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_client_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_client_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "01147fbf-9162-48a3-aa70-7941199f9600",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - server_ip"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - server_ip\"\nwhen\n  has_field(\n    field : \"meraki_server_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_server_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_server_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "07c25060-0524-4ac2-a148-99730e0ec44a",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - translated_port"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - translated_port\"\nwhen\n  has_field(\n    field : \"meraki_translated_port\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_translated_port\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_translated_port\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "32abedb5-250b-43ab-ae73-f387570b42ba",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - vap"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - vap\"\nwhen\n  has_field(\n    field : \"meraki_vap\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_vap\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_vap\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "a8b74edf-4409-433a-a804-efef0f70fa85",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - dst_port"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - dst_port\"\nwhen\n  has_field(\n    field : \"meraki_dst_port\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_dst_port\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_dst_port\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "dc7b87cf-8e26-4635-a713-72b32e996b28",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - dhcp_lease_completed"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - dhcp_lease_completed\"\nwhen\n  has_field(\n    field : \"meraki_dhcp_lease_completed\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_dhcp_lease_completed\"\n  );\n  let output_2 = to_double(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_dhcp_lease_completed\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_adapter",
          "version": "1"
        },
        "id": "b28cf1f2-37a8-4280-8e70-07e9889c33fc",
        "data": {
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki - icmp6_type"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - icmp6_type"
          },
          "description": {
            "@type": "string",
            "@value": "Data adapter for meraki icmp6 type"
          },
          "configuration": {
            "value_column": {
              "@type": "string",
              "@value": "value"
            },
            "path": {
              "@type": "string",
              "@value": "/etc/graylog/files/icmp6_type.csv"
            },
            "cidr_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "separator": {
              "@type": "string",
              "@value": ","
            },
            "quotechar": {
              "@type": "string",
              "@value": "\""
            },
            "key_column": {
              "@type": "string",
              "@value": "key"
            },
            "case_insensitive_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "type": {
              "@type": "string",
              "@value": "csvfile"
            },
            "check_interval": {
              "@type": "long",
              "@value": 60
            }
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "db7599b5-932a-46a1-b72a-8d7a79a03e5b",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - UNIX Epoch Conversion with Timezone"
          },
          "description": {
            "@type": "string",
            "@value": "Converts UNIX timestamp from log to human readable. "
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - UNIX Epoch Conversion with Timezone\"\nwhen\n  has_field(\"meraki_epoch\")\nthen\n  // Step 1: Get raw epoch value as string\n  let raw_epoch_str = to_string(get_field(\"meraki_epoch\"));\n  //set_field(\"debug_raw_epoch_str\", raw_epoch_str);\n\n  // Step 2: Convert to floating-point number to handle decimals\n  let raw_epoch = to_double(raw_epoch_str);\n  //set_field(\"debug_raw_epoch\", raw_epoch);\n\n  // Step 3: Drop the decimal part and convert to whole seconds (round down)\n  let epoch_seconds = to_long(raw_epoch);  // Dropping the fractional part\n  //set_field(\"debug_epoch_seconds\", epoch_seconds);\n\n  // Step 4: Convert the epoch seconds to milliseconds\n  let epoch_ms = epoch_seconds * 1000;  // Convert to milliseconds\n  //set_field(\"debug_epoch_ms\", epoch_ms);\n\n  // Step 5: Use parse_unix_milliseconds to convert the epoch timestamp (milliseconds) to a date\n  let converted_date = parse_unix_milliseconds(epoch_ms, \"America/Los_Angeles\");\n // set_field(\"debug_converted_date_tz\", converted_date);\n\n  // Step 6: Store the correctly parsed and timezone-adjusted timestamp\n  set_field(\"meraki_timestamp\", converted_date);\nend\n"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "5d2cd777-d852-4bdc-a2a0-3ddb171334a6",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - last_known_client_ip"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - last_known_client_ip\"\nwhen\n  has_field(\n    field : \"meraki_last_known_client_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\"\n  );\n  let output_1 = get_field(\n    field : \"meraki_last_known_client_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_last_known_client_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_table",
          "version": "1"
        },
        "id": "c5c9cbde-3cbe-4add-b8af-4b090ada1d9f",
        "data": {
          "default_single_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "cache_name": {
            "@type": "string",
            "@value": "0baf39f2-1887-43a0-a949-ce5bd293006e"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki - icmp6_type"
          },
          "default_multi_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "default_multi_value": {
            "@type": "string",
            "@value": ""
          },
          "data_adapter_name": {
            "@type": "string",
            "@value": "b28cf1f2-37a8-4280-8e70-07e9889c33fc"
          },
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - icmp6_type"
          },
          "default_single_value": {
            "@type": "string",
            "@value": ""
          },
          "description": {
            "@type": "string",
            "@value": "Lookup table for converting icmp6_type to its description."
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "7d9c43a6-7a62-4973-bb84-4208f7b36303",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - best_ap_load"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - best_ap_load\"\nwhen\n  has_field(\n    field : \"meraki_best_ap_load\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_best_ap_load\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_best_ap_load\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "d7fbc42d-c0ec-4a1e-af8d-fcc1d44cc3e3",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - dns_server"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - dns_server\"\nwhen\n  has_field(\n    field : \"meraki_dns_server\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_dns_server\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_dns_server\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "38229519-884c-496e-a124-71e8fb3f56a1",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Events - Two MACs Same IP"
          },
          "description": {
            "@type": "string",
            "@value": "Parses issues of two macs claiming the same IP address"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Events - Two MACs Same IP\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"events MAC \"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"events MAC %{COMMONMAC:mac1} and MAC %{COMMONMAC:mac2} both claim IP: %{IP:claimed_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"meraki_issue\",\n    value : \"Two MACs claim single IP\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "14187912-28cd-49aa-83a0-4795098a7f86",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - auth_neg_dur"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - auth_neg_dur\"\nwhen\n  has_field(\n    field : \"meraki_auth_neg_dur\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_auth_neg_dur\"\n  );\n  let output_2 = to_double(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_auth_neg_dur\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "96b35862-30ef-4557-9bb7-c46f863985a7",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - radio"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - radio\"\nwhen\n  has_field(\n    field : \"meraki_radio\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_radio\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_radio\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_adapter",
          "version": "1"
        },
        "id": "329408ba-9c9e-480e-8cba-4e57f02247a5",
        "data": {
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki - icmp_type"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - icmp_type"
          },
          "description": {
            "@type": "string",
            "@value": "Data adapter for meraki icmp type"
          },
          "configuration": {
            "value_column": {
              "@type": "string",
              "@value": "value"
            },
            "path": {
              "@type": "string",
              "@value": "/etc/graylog/files/icmp_type.csv"
            },
            "cidr_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "separator": {
              "@type": "string",
              "@value": ","
            },
            "quotechar": {
              "@type": "string",
              "@value": "\""
            },
            "key_column": {
              "@type": "string",
              "@value": "key"
            },
            "case_insensitive_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "type": {
              "@type": "string",
              "@value": "csvfile"
            },
            "check_interval": {
              "@type": "long",
              "@value": 60
            }
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "34baea40-f9ab-4ca0-96dc-4581fb7cb3f3",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Events - Content Filtering"
          },
          "description": {
            "@type": "string",
            "@value": "Parses event logs based around content filtering"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Events - Content Filtering\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"content_filtering\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category} %{WORD:filter_action}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"url='%{URI:url}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"server='%{IP:server}:%{BASE10NUM:server_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"client_ip='%{IP:client_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"category0='%{DATA:filter_reason}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"category1='%{DATA:filter_subreason}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  rename_field(\n    old_field : \"meraki_HOSTNAME\",\n    new_field : \"meraki_url_hostname\"\n  );\n  rename_field(\n    old_field : \"meraki_IPORHOST\",\n    new_field : \"meraki_url_iporhost\"\n  );\n  rename_field(\n    old_field : \"meraki_URIHOST\",\n    new_field : \"meraki_url_urihost\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPATH\",\n    new_field : \"meraki_url_path\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPATHPARAM\",\n    new_field : \"meraki_url_uripathparam\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPROTO\",\n    new_field : \"meraki_url_protocol\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_adapter",
          "version": "1"
        },
        "id": "2107de83-e655-44dd-a768-8cc01e1b4b2a",
        "data": {
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki - FC Combined"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - FC Combined"
          },
          "description": {
            "@type": "string",
            "@value": "Combined frame control data."
          },
          "configuration": {
            "value_column": {
              "@type": "string",
              "@value": "value"
            },
            "path": {
              "@type": "string",
              "@value": "/etc/graylog/files/fc_combined.csv"
            },
            "cidr_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "separator": {
              "@type": "string",
              "@value": ","
            },
            "quotechar": {
              "@type": "string",
              "@value": "\""
            },
            "key_column": {
              "@type": "string",
              "@value": "key"
            },
            "case_insensitive_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "type": {
              "@type": "string",
              "@value": "csvfile"
            },
            "check_interval": {
              "@type": "long",
              "@value": 60
            }
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "281d1ac0-b965-4bbe-b3f7-e57d1a70bde3",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - icmp6_type"
          },
          "description": {
            "@type": "string",
            "@value": "Converts ICMP6 to its human readable description. "
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - icmp6_type\"\nwhen\n  contains(\n  value: to_string($message.\"meraki_protocol\"),\n  search: \"icmp6\",\n  ignore_case: true\n)\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_icmp_type\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_icmp_type\",\n    value : output_2\n  );\n  let gl2_fragment_extractor_1743543348834 = lookup_value(\"Meraki - icmp6_type\", to_string($message.\"meraki_icmp_type\"));\nset_field(\"meraki_icmp_type_description\", gl2_fragment_extractor_1743543348834);\n  let output_3 = gl2_fragment_extractor_1743543348834;\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "stream",
          "version": "1"
        },
        "id": "33bfcf8b-b272-4edf-94b6-f9378286eac4",
        "data": {
          "alarm_callbacks": [],
          "outputs": [],
          "remove_matches": {
            "@type": "boolean",
            "@value": true
          },
          "title": {
            "@type": "string",
            "@value": "Cisco Meraki"
          },
          "stream_rules": [
            {
              "type": {
                "@type": "string",
                "@value": "MATCH_INPUT"
              },
              "field": {
                "@type": "string",
                "@value": ""
              },
              "value": {
                "@type": "string",
                "@value": "67d327bb50f11e068c0b51eb"
              },
              "inverted": {
                "@type": "boolean",
                "@value": false
              },
              "description": {
                "@type": "string",
                "@value": ""
              }
            }
          ],
          "alert_conditions": [],
          "matching_type": {
            "@type": "string",
            "@value": "AND"
          },
          "disabled": {
            "@type": "boolean",
            "@value": false
          },
          "description": {
            "@type": "string",
            "@value": ""
          },
          "default_stream": {
            "@type": "boolean",
            "@value": false
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "2f91a2a5-8b09-4645-96c5-fe53ae4926e6",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - dns_resp_time"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - dns_resp_time\"\nwhen\n  has_field(\n    field : \"meraki_dns_resp_time\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_dns_resp_time\"\n  );\n  let output_2 = to_double(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_dns_resp_time\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "ac582028-722a-4c97-be25-89d32d5c10cb",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - peer"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - peer\"\nwhen\n  has_field(\n    field : \"meraki_peer\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_peer\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_peer\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "d9d0e48d-01bf-4f23-a55d-80b9115cefac",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Firewall"
          },
          "description": {
            "@type": "string",
            "@value": "Parses out firewall logs"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Firewall\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"firewall\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src=%{IP:src_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst=%{IP:dst_ip}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"protocol=%{WORD:protocol}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"mac=%{COMMONMAC:mac_address}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"sport=%{INT:src_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dport=%{INT:dst_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"pattern: %{GREEDYDATA:pattern}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "44c49c1f-af20-41b9-9317-6f75ef3b4b45",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - server_port"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - server_port\"\nwhen\n  has_field(\n    field : \"meraki_server_port\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_server_port\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_server_port\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "7989842c-98dc-40bb-9d85-3b41b9ebf327",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - arp_resp_time"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - arp_resp_time\"\nwhen\n  has_field(\n    field : \"meraki_arp_resp_time\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_arp_resp_time\"\n  );\n  let output_2 = to_double(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_arp_resp_time\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "event_definition",
          "version": "1"
        },
        "id": "dec37037-a5b1-4771-9d83-31f6d8af7255",
        "data": {
          "field_spec": {},
          "config": {
            "query_parameters": [],
            "search_within_ms": 300000,
            "query": {
              "@type": "string",
              "@value": "_exists_:meraki_dns_req_rtt_time"
            },
            "cron_expression": null,
            "cron_timezone": null,
            "use_cron_scheduling": false,
            "streams": [
              "33bfcf8b-b272-4edf-94b6-f9378286eac4"
            ],
            "execute_every_ms": 300000,
            "event_limit": 100,
            "group_by": [
              "meraki_dns_req_rtt_time"
            ],
            "series": [
              {
                "type": "avg",
                "id": "avg-meraki_dns_req_rtt_time",
                "field": "meraki_dns_req_rtt_time",
                "whole_number": false
              }
            ],
            "conditions": {
              "expression": {
                "expr": ">=",
                "left": {
                  "expr": "number-ref",
                  "ref": "avg-meraki_dns_req_rtt_time"
                },
                "right": {
                  "expr": "number",
                  "value": 0.25
                }
              }
            },
            "type": "aggregation-v1",
            "stream_categories": [],
            "filters": []
          },
          "priority": {
            "@type": "integer",
            "@value": 2
          },
          "notifications": [],
          "remediation_steps": null,
          "matched_at": "2025-04-03T21:19:59.502Z",
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "notification_settings": {
            "grace_period_ms": 300000,
            "backlog_size": 0
          },
          "updated_at": "2025-03-28T18:44:59.500Z",
          "title": {
            "@type": "string",
            "@value": "Meraki - High DNS Request Round-Trip Times"
          },
          "is_scheduled": {
            "@type": "boolean",
            "@value": true
          },
          "key_spec": [],
          "storage": [
            {
              "type": "persist-to-streams-v1",
              "streams": [
                "000000000000000000000002"
              ]
            }
          ],
          "alert": {
            "@type": "boolean",
            "@value": false
          },
          "description": {
            "@type": "string",
            "@value": "Alerts based on high average DNS Request Round-Trip Times."
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_adapter",
          "version": "1"
        },
        "id": "c7b71991-ebef-4750-9db6-f41f34e1b621",
        "data": {
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki - band"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - band"
          },
          "description": {
            "@type": "string",
            "@value": "Data adapter for wireless band"
          },
          "configuration": {
            "value_column": {
              "@type": "string",
              "@value": "value"
            },
            "path": {
              "@type": "string",
              "@value": "/etc/graylog/files/band.csv"
            },
            "cidr_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "separator": {
              "@type": "string",
              "@value": ","
            },
            "quotechar": {
              "@type": "string",
              "@value": "\""
            },
            "key_column": {
              "@type": "string",
              "@value": "key"
            },
            "case_insensitive_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "type": {
              "@type": "string",
              "@value": "csvfile"
            },
            "check_interval": {
              "@type": "long",
              "@value": 60
            }
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_table",
          "version": "1"
        },
        "id": "f45f1d5a-bfa0-454c-ab45-31671278293e",
        "data": {
          "default_single_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "cache_name": {
            "@type": "string",
            "@value": "0baf39f2-1887-43a0-a949-ce5bd293006e"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki - reason"
          },
          "default_multi_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "default_multi_value": {
            "@type": "string",
            "@value": ""
          },
          "data_adapter_name": {
            "@type": "string",
            "@value": "5eadc771-1262-41c4-8af0-81e7a3ac408c"
          },
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - reason"
          },
          "default_single_value": {
            "@type": "string",
            "@value": ""
          },
          "description": {
            "@type": "string",
            "@value": "Lookup table for Reason"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "20ad2c7a-257f-46ca-9816-8bace5532e8d",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - rssi"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - rssi\"\nwhen\n  has_field(\n    field : \"meraki_rssi\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_rssi\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_rssi\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_table",
          "version": "1"
        },
        "id": "7be90a26-5968-4858-bdd0-6b117ea2b175",
        "data": {
          "default_single_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "cache_name": {
            "@type": "string",
            "@value": "0baf39f2-1887-43a0-a949-ce5bd293006e"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki Facility Mapping"
          },
          "default_multi_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "default_multi_value": {
            "@type": "string",
            "@value": ""
          },
          "data_adapter_name": {
            "@type": "string",
            "@value": "a97e27df-2b4b-4083-bd59-a6db6f2ce95f"
          },
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - Facility Mapping"
          },
          "default_single_value": {
            "@type": "string",
            "@value": ""
          },
          "description": {
            "@type": "string",
            "@value": "Mapping Facility for meraki"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "ab9df70b-9bf2-4bf2-b823-3a940ae7f932",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Events - FIPS Event"
          },
          "description": {
            "@type": "string",
            "@value": "Parses FIPS events."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Events - FIPS Event\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"type=fips_event\",\n  ignore_case: true\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"type=%{WORD:event_type}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"reason='%{DATA:fips_reason}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "1b97754e-e538-410b-b1de-7dd7fff0de97",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Events - Port Status Change"
          },
          "description": {
            "@type": "string",
            "@value": "Parses logs referencing Port Status Changes"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Events - Port Status Change\"\nwhen\n  grok(\n  value: to_string($message.\"message\"),\n  pattern: \"port %{BASE10NUM:port} status changed \"\n).matches == true\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"port %{BASE10NUM:switch_port} status changed from %{DATA:old_status} to %{GREEDYDATA:new_status}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"issue\",\n    value : \"Port Status Change\",\n    prefix : \"meraki_\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "312e8b6c-8ee5-47e0-8d45-eea888dab26f",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - ip_resp_time"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - ip_resp_time\"\nwhen\n  has_field(\n    field : \"meraki_ip_resp_time\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_ip_resp_time\"\n  );\n  let output_2 = to_double(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_ip_resp_time\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline",
          "version": "1"
        },
        "id": "c631e9ad-092b-48b5-8cef-66c917371bf0",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Cisco Meraki"
          },
          "description": {
            "@type": "string",
            "@value": ""
          },
          "source": {
            "@type": "string",
            "@value": "pipeline \"Cisco Meraki\"\nstage 0 match either\nrule \"Meraki - Extract Syslog PRI\"\nrule \"Meraki - Airmarshal Events\"\nrule \"Meraki - Events\"\nrule \"Meraki - Firewall\"\nrule \"Meraki - Flows\"\nrule \"Meraki - IP Flow\"\nrule \"Meraki - URLS\"\nrule \"Meraki - Events - Content Filtering\"\nrule \"Meraki - Events - DHCP No Offers\"\nrule \"Meraki - Events - FIPS Event\"\nrule \"Meraki - Events - Port Status Change\"\nrule \"Meraki - Events - Route Connection Change\"\nrule \"Meraki - Events - STP Role Change\"\nrule \"Meraki - Events - Two MACs Same IP\"\nstage 1 match either\nrule \"Meraki - aid\"\nrule \"Meraki - arp_resp_time\"\nrule \"Meraki - arp_src\"\nrule \"Meraki - auth_neg_dur\"\nrule \"Meraki - band\"\nrule \"Meraki - channel\"\nrule \"Meraki - dhcp_ip\"\nrule \"Meraki - dhcp_lease_completed\"\nrule \"Meraki - dhcp_resp_time\"\nrule \"Meraki - dhcp_server\"\nrule \"Meraki - dns_req_rtt_time\"\nrule \"Meraki - dns_resp_time\"\nrule \"Meraki - dns_server\"\nrule \"Meraki - dst_ip\"\nrule \"Meraki - dst_port\"\nrule \"Meraki - duration\"\nrule \"Meraki - epoch\"\nrule \"Meraki - fc_subtype\"\nrule \"Meraki - fc_type\"\nrule \"Meraki - full_conn_time\"\nrule \"Meraki - http_resp_time\"\nrule \"Meraki - ip_resp_time\"\nrule \"Meraki - ip_src\"\nrule \"Meraki - is_wpa\"\nrule \"Meraki - last_auth_ago\"\nrule \"Meraki - last_known_client_ip\"\nrule \"Meraki - radio\"\nrule \"Meraki - rssi\"\nrule \"Meraki - src_ip\"\nrule \"Meraki - src_port\"\nrule \"Meraki - syslog_priority\"\nrule \"Meraki - syslog_ver\"\nrule \"Meraki - translated_port\"\nrule \"Meraki - translated_src_ip\"\nrule \"Meraki - vap\"\nrule \"Meraki - UNIX Epoch Conversion with Timezone\"\nrule \"Meraki - last_known_client_ip6\"\nrule \"Meraki - client_ip\"\nrule \"Meraki - server\"\nrule \"Meraki - server_port\"\nrule \"Meraki - switch_port\"\nrule \"Meraki - reason\"\nrule \"Meraki - MAC Flap Detected\"\nrule \"Meraki - vlan\"\nrule \"Meraki - load\"\nrule \"Meraki - best_ap\"\nrule \"Meraki - best_ap_load\"\nrule \"Meraki - original_server_ip\"\nrule \"Meraki - server_ip\"\nrule \"Meraki - peer\"\nrule \"Meraki - frame_control\"\nrule \"Meraki - icmp_type\"\nrule \"Meraki - icmp6_type\"\nend"
          },
          "connected_streams": [
            {
              "@type": "string",
              "@value": "33bfcf8b-b272-4edf-94b6-f9378286eac4"
            }
          ]
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "ae8b07b5-9362-4f79-bb26-84f64fa69617",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - dhcp_server"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - dhcp_server\"\nwhen\n  has_field(\n    field : \"meraki_dhcp_server\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\"\n  );\n  let output_1 = get_field(\n    field : \"meraki_dhcp_server\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_dhcp_server\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "80fcc6ac-5ebb-46a3-ad28-f3efa4dff12e",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - icmp_type"
          },
          "description": {
            "@type": "string",
            "@value": "Converts ICMP codes to human readable"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - icmp_type\"\nwhen\n  has_field(\n    field : \"meraki_icmp_type\"\n  )\n  AND\n  ! contains(\n  value: to_string($message.\"meraki_protocol\"),\n  search: \"icmp6\",\n  ignore_case: true\n)\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_icmp_type\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_icmp_type\",\n    value : output_2\n  );\n  let gl2_fragment_extractor_1743543348834 = lookup_value(\"Meraki - icmp_type\", to_string($message.\"meraki_icmp_type\"));\nset_field(\"meraki_icmp_type_description\", gl2_fragment_extractor_1743543348834);\n  let output_3 = gl2_fragment_extractor_1743543348834;\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_adapter",
          "version": "1"
        },
        "id": "a539cecd-6155-40a3-b0fd-3f644c86fed4",
        "data": {
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "name": {
            "@type": "string",
            "@value": "syslog-severity-mapping"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - Syslog Severity Mapping"
          },
          "description": {
            "@type": "string",
            "@value": "Maps Meraki Syslog Severity to its actuals"
          },
          "configuration": {
            "value_column": {
              "@type": "string",
              "@value": "value"
            },
            "path": {
              "@type": "string",
              "@value": "/etc/graylog/files/syslog_severity_mapping.csv"
            },
            "cidr_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "separator": {
              "@type": "string",
              "@value": ","
            },
            "quotechar": {
              "@type": "string",
              "@value": "\""
            },
            "key_column": {
              "@type": "string",
              "@value": "key"
            },
            "case_insensitive_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "type": {
              "@type": "string",
              "@value": "csvfile"
            },
            "check_interval": {
              "@type": "long",
              "@value": 60
            }
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "ed8ded29-6022-41ac-b309-138decf7bca7",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - load"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - load\"\nwhen\n  has_field(\n    field : \"meraki_load\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_load\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"load\",\n    value : output_2,\n    prefix : \"meraki_\"\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "ecbbfb8c-265c-408d-869e-90147b45b002",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - last_known_client_ip6"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - last_known_client_ip6\"\nwhen\n  has_field(\n    field : \"meraki_last_known_client_ip6\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_last_known_client_ip6\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_last_known_client_ip6\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "a5cc137a-0044-4fe2-b69a-70ba3e84ce5c",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - aid"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - aid\"\nwhen\n  has_field(\n    field : \"meraki_aid\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_aid\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_aid\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "802fe0b7-328c-44ba-812b-f93d17f53387",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - dhcp_ip"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - dhcp_ip\"\nwhen\n  has_field(\n    field : \"meraki_dhcp_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_dhcp_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_dhcp_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_adapter",
          "version": "1"
        },
        "id": "11a7ca5f-a4a4-409b-8f54-23a718336132",
        "data": {
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "name": {
            "@type": "string",
            "@value": "meraki-wpa"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - WPA"
          },
          "description": {
            "@type": "string",
            "@value": "Converts 0 or 1 to human readable. "
          },
          "configuration": {
            "value_column": {
              "@type": "string",
              "@value": "value"
            },
            "path": {
              "@type": "string",
              "@value": "/etc/graylog/files/is_wpa.csv"
            },
            "cidr_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "separator": {
              "@type": "string",
              "@value": ","
            },
            "quotechar": {
              "@type": "string",
              "@value": "\""
            },
            "key_column": {
              "@type": "string",
              "@value": "key"
            },
            "case_insensitive_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "type": {
              "@type": "string",
              "@value": "csvfile"
            },
            "check_interval": {
              "@type": "long",
              "@value": 60
            }
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_table",
          "version": "1"
        },
        "id": "9bff9f7f-d04d-4613-9889-455cc67506c3",
        "data": {
          "default_single_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "cache_name": {
            "@type": "string",
            "@value": "0baf39f2-1887-43a0-a949-ce5bd293006e"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki - FC Combined"
          },
          "default_multi_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "default_multi_value": {
            "@type": "string",
            "@value": ""
          },
          "data_adapter_name": {
            "@type": "string",
            "@value": "2107de83-e655-44dd-a768-8cc01e1b4b2a"
          },
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - FC Combined"
          },
          "default_single_value": {
            "@type": "string",
            "@value": ""
          },
          "description": {
            "@type": "string",
            "@value": "Maps the frame control type and subtype"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "input",
          "version": "1"
        },
        "id": "aa8ed078-d024-447a-83af-9c966bf8ffc2",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Cisco Meraki"
          },
          "configuration": {
            "recv_buffer_size": {
              "@type": "integer",
              "@value": 262144
            },
            "port": {
              "@type": "integer",
              "@value": 1514
            },
            "number_worker_threads": {
              "@type": "integer",
              "@value": 10
            },
            "charset_name": {
              "@type": "string",
              "@value": "UTF-8"
            },
            "bind_address": {
              "@type": "string",
              "@value": "0.0.0.0"
            }
          },
          "static_fields": {},
          "type": {
            "@type": "string",
            "@value": "org.graylog2.inputs.raw.udp.RawUDPInput"
          },
          "global": {
            "@type": "boolean",
            "@value": true
          },
          "extractors": []
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_adapter",
          "version": "1"
        },
        "id": "5eadc771-1262-41c4-8af0-81e7a3ac408c",
        "data": {
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "name": {
            "@type": "string",
            "@value": "meraki-reason"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - reason"
          },
          "description": {
            "@type": "string",
            "@value": "Data adapter for meraki reason"
          },
          "configuration": {
            "value_column": {
              "@type": "string",
              "@value": "value"
            },
            "path": {
              "@type": "string",
              "@value": "/etc/graylog/files/reason.csv"
            },
            "cidr_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "separator": {
              "@type": "string",
              "@value": ","
            },
            "quotechar": {
              "@type": "string",
              "@value": "\""
            },
            "key_column": {
              "@type": "string",
              "@value": "key"
            },
            "case_insensitive_lookup": {
              "@type": "boolean",
              "@value": false
            },
            "type": {
              "@type": "string",
              "@value": "csvfile"
            },
            "check_interval": {
              "@type": "long",
              "@value": 60
            }
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "7fe7aff8-457d-4676-9e11-38dde0d2b11c",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - src_port"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - src_port\"\nwhen\n  has_field(\n    field : \"meraki_src_port\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_src_port\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_src_port\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "dashboard",
          "version": "2"
        },
        "id": "09647381-e266-4771-a20d-da51dab3b520",
        "data": {
          "summary": {
            "@type": "string",
            "@value": "Meraki logs"
          },
          "search": {
            "queries": [
              {
                "id": "3ce0f07f-aff7-4e8a-a2ae-91875b183dde",
                "timerange": {
                  "from": 300,
                  "type": "relative"
                },
                "filters": [],
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "search_types": [
                  {
                    "query": {
                      "type": "elasticsearch",
                      "query_string": ""
                    },
                    "name": "chart",
                    "timerange": {
                      "from": 300,
                      "type": "relative"
                    },
                    "column_limit": null,
                    "streams": [
                      "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                    ],
                    "row_limit": null,
                    "series": [
                      {
                        "type": "count",
                        "id": "count(meraki_event_type)",
                        "field": "meraki_event_type"
                      }
                    ],
                    "filter": null,
                    "rollup": true,
                    "row_groups": [
                      {
                        "type": "values",
                        "fields": [
                          "meraki_event_type"
                        ],
                        "limit": 15,
                        "skip_empty_values": true
                      }
                    ],
                    "type": "pivot",
                    "stream_categories": [],
                    "id": "493d415c-6da1-4668-b41a-b92186d46183",
                    "filters": [],
                    "column_groups": [],
                    "sort": []
                  },
                  {
                    "query": {
                      "type": "elasticsearch",
                      "query_string": ""
                    },
                    "name": "chart",
                    "timerange": {
                      "from": 300,
                      "type": "relative"
                    },
                    "column_limit": null,
                    "streams": [
                      "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                    ],
                    "row_limit": null,
                    "series": [
                      {
                        "type": "count",
                        "id": "count(meraki_airmarshal_event_type)",
                        "field": "meraki_airmarshal_event_type"
                      }
                    ],
                    "filter": null,
                    "rollup": true,
                    "row_groups": [
                      {
                        "type": "values",
                        "fields": [
                          "meraki_airmarshal_event_type"
                        ],
                        "limit": 15,
                        "skip_empty_values": true
                      }
                    ],
                    "type": "pivot",
                    "stream_categories": [],
                    "id": "cb0c237c-fdd0-4461-ab49-c6897618c7f1",
                    "filters": [],
                    "column_groups": [],
                    "sort": []
                  },
                  {
                    "query": {
                      "type": "elasticsearch",
                      "query_string": ""
                    },
                    "name": "chart",
                    "timerange": {
                      "from": 86400,
                      "type": "relative"
                    },
                    "column_limit": null,
                    "streams": [
                      "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                    ],
                    "row_limit": null,
                    "series": [
                      {
                        "type": "count",
                        "id": "count(meraki_category)",
                        "field": "meraki_category"
                      }
                    ],
                    "filter": null,
                    "rollup": true,
                    "row_groups": [
                      {
                        "type": "values",
                        "fields": [
                          "meraki_category"
                        ],
                        "limit": 15,
                        "skip_empty_values": false
                      }
                    ],
                    "type": "pivot",
                    "stream_categories": [],
                    "id": "6d3880cf-30fd-4b05-8dfc-e712851f580b",
                    "filters": [],
                    "column_groups": [],
                    "sort": []
                  },
                  {
                    "query": {
                      "type": "elasticsearch",
                      "query_string": ""
                    },
                    "name": "chart",
                    "timerange": {
                      "from": 3600,
                      "type": "relative"
                    },
                    "column_limit": null,
                    "streams": [
                      "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                    ],
                    "row_limit": null,
                    "series": [
                      {
                        "type": "avg",
                        "id": "DHCP Response Time",
                        "field": "meraki_dhcp_resp_time",
                        "whole_number": false
                      },
                      {
                        "type": "avg",
                        "id": "DNS Rount Trip Time",
                        "field": "meraki_dns_req_rtt_time",
                        "whole_number": false
                      },
                      {
                        "type": "avg",
                        "id": "DNS Response Time",
                        "field": "meraki_dns_resp_time",
                        "whole_number": false
                      },
                      {
                        "type": "avg",
                        "id": "DNS Req Round Trip Time",
                        "field": "meraki_dns_req_rtt_time",
                        "whole_number": false
                      }
                    ],
                    "filter": null,
                    "rollup": true,
                    "row_groups": [
                      {
                        "type": "time",
                        "fields": [
                          "timestamp"
                        ],
                        "interval": {
                          "type": "auto",
                          "scaling": 1
                        }
                      }
                    ],
                    "type": "pivot",
                    "stream_categories": [],
                    "id": "8ce885b7-af48-4cef-8154-0576d75c8c02",
                    "filters": [],
                    "column_groups": [],
                    "sort": []
                  },
                  {
                    "query": {
                      "type": "elasticsearch",
                      "query_string": ""
                    },
                    "name": "chart",
                    "timerange": {
                      "from": 300,
                      "type": "relative"
                    },
                    "column_limit": null,
                    "streams": [
                      "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                    ],
                    "row_limit": null,
                    "series": [
                      {
                        "type": "count",
                        "id": "count(meraki_action_taken)",
                        "field": "meraki_action_taken"
                      }
                    ],
                    "filter": null,
                    "rollup": true,
                    "row_groups": [
                      {
                        "type": "values",
                        "fields": [
                          "meraki_action_taken"
                        ],
                        "limit": 15,
                        "skip_empty_values": true
                      }
                    ],
                    "type": "pivot",
                    "stream_categories": [],
                    "id": "92a56920-61ee-40e9-82db-ed54145a89e9",
                    "filters": [],
                    "column_groups": [],
                    "sort": []
                  },
                  {
                    "query": {
                      "type": "elasticsearch",
                      "query_string": ""
                    },
                    "name": "chart",
                    "timerange": {
                      "from": 300,
                      "type": "relative"
                    },
                    "column_limit": null,
                    "streams": [
                      "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                    ],
                    "row_limit": null,
                    "series": [
                      {
                        "type": "count",
                        "id": "count(meraki_syslog_severity)",
                        "field": "meraki_syslog_severity"
                      }
                    ],
                    "filter": null,
                    "rollup": true,
                    "row_groups": [
                      {
                        "type": "values",
                        "fields": [
                          "meraki_syslog_severity"
                        ],
                        "limit": 15,
                        "skip_empty_values": true
                      }
                    ],
                    "type": "pivot",
                    "stream_categories": [],
                    "id": "49b170e8-b2b5-41e5-867f-4b80b81a376d",
                    "filters": [],
                    "column_groups": [],
                    "sort": []
                  }
                ]
              },
              {
                "id": "68d83277-6b5f-401d-86cf-7df864fd8ecf",
                "timerange": {
                  "from": 300,
                  "type": "relative"
                },
                "filters": [],
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "search_types": [
                  {
                    "query": {
                      "type": "elasticsearch",
                      "query_string": "meraki_filter_action:content_filtering_block"
                    },
                    "name": "chart",
                    "timerange": {
                      "range": 0,
                      "type": "relative"
                    },
                    "column_limit": null,
                    "streams": [
                      "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                    ],
                    "row_limit": null,
                    "series": [
                      {
                        "type": "count",
                        "id": "Total Hits",
                        "field": "meraki_url"
                      },
                      {
                        "type": "percentage",
                        "id": "Percentage of Total",
                        "strategy": "COUNT",
                        "field": "meraki_url"
                      }
                    ],
                    "filter": null,
                    "rollup": true,
                    "row_groups": [
                      {
                        "type": "values",
                        "fields": [
                          "meraki_url",
                          "meraki_filter_reason"
                        ],
                        "limit": 25,
                        "skip_empty_values": false
                      }
                    ],
                    "type": "pivot",
                    "stream_categories": [],
                    "id": "211b641b-2db7-48de-9dda-092e2f79c5a6",
                    "filters": [],
                    "column_groups": [],
                    "sort": [
                      {
                        "type": "pivot",
                        "field": "meraki_filter_reason",
                        "direction": "Descending"
                      }
                    ]
                  },
                  {
                    "query": {
                      "type": "elasticsearch",
                      "query_string": "meraki_filter_action:content_filtering_block"
                    },
                    "name": null,
                    "timerange": {
                      "range": 0,
                      "type": "relative"
                    },
                    "offset": 0,
                    "streams": [
                      "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                    ],
                    "filter": null,
                    "decorators": [],
                    "type": "messages",
                    "stream_categories": [],
                    "id": "ae2ec536-2e24-4652-a16a-e484ba2432d8",
                    "limit": 150,
                    "filters": []
                  }
                ]
              },
              {
                "id": "40774a0d-c721-414f-bae8-5473bdc891bd",
                "timerange": {
                  "from": 300,
                  "type": "relative"
                },
                "filters": [],
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "search_types": [
                  {
                    "query": {
                      "type": "elasticsearch",
                      "query_string": "meraki_event_type:\"martian_vlan\""
                    },
                    "name": null,
                    "timerange": {
                      "from": 300,
                      "type": "relative"
                    },
                    "offset": 0,
                    "streams": [
                      "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                    ],
                    "filter": null,
                    "decorators": [],
                    "type": "messages",
                    "stream_categories": [],
                    "id": "c2f3196b-a046-4c3f-89ee-4000e5ce2a3b",
                    "limit": 150,
                    "filters": []
                  },
                  {
                    "query": {
                      "type": "elasticsearch",
                      "query_string": ""
                    },
                    "name": "chart",
                    "timerange": {
                      "from": 300,
                      "type": "relative"
                    },
                    "column_limit": null,
                    "streams": [
                      "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                    ],
                    "row_limit": null,
                    "series": [
                      {
                        "type": "count",
                        "id": "Total Issues",
                        "field": "meraki_issue"
                      },
                      {
                        "type": "percentage",
                        "id": "Percentage of Total",
                        "strategy": "COUNT",
                        "field": "meraki_issue"
                      }
                    ],
                    "filter": null,
                    "rollup": true,
                    "row_groups": [
                      {
                        "type": "values",
                        "fields": [
                          "meraki_issue"
                        ],
                        "limit": 15,
                        "skip_empty_values": true
                      }
                    ],
                    "type": "pivot",
                    "stream_categories": [],
                    "id": "64af2cb9-5324-4b1b-afd7-6e9de6d2eb7a",
                    "filters": [],
                    "column_groups": [],
                    "sort": []
                  }
                ]
              }
            ],
            "parameters": [],
            "requires": {},
            "owner": "admin",
            "created_at": "2025-04-03T20:05:25.208Z"
          },
          "created_at": "2025-03-19T20:21:35.428Z",
          "requires": {},
          "state": {
            "3ce0f07f-aff7-4e8a-a2ae-91875b183dde": {
              "selected_fields": null,
              "static_message_list_id": null,
              "titles": {
                "widget": {
                  "587ef1cf-6886-413e-b074-f0ee26f6cb46": "Message Table",
                  "dff65622-c6e3-455e-b341-1f7ed61e90f6": "DNS Req R",
                  "32ba85ea-086b-4f23-a22d-b0cfa80db88b": "Event Actions Taken",
                  "14bba717-5b3b-40f8-a191-ee744a4b78e4": "Event Types",
                  "be46012b-04cb-4d05-8b87-2620c9895781": "Syslog Facility and Priority",
                  "0044022b-1bbe-488a-a366-77a24eae572f": "Events by Category",
                  "b242c0a2-cca0-4564-a53d-9ba2e4f8a8b0": "Syslog Severity",
                  "4b86c586-6824-4308-8fc3-fa932dedc433": "Airmarshal Events",
                  "3bfdb11b-cfac-4110-9af0-9706f53f35bc": "Avg DHCP Response Time",
                  "4e86be0a-5608-436b-b5b7-efe2e31eccc1": "Avg Response Times",
                  "552e967d-f51a-47ac-bb5e-8015bdb4080a": " Message Count"
                },
                "tab": {
                  "title": "Response Times and Events"
                }
              },
              "widgets": [
                {
                  "config": {
                    "visualization": "line",
                    "units": {},
                    "column_limit": null,
                    "event_annotation": false,
                    "row_limit": null,
                    "row_pivots": [
                      {
                        "fields": [
                          "timestamp"
                        ],
                        "type": "time",
                        "config": {
                          "interval": {
                            "type": "auto",
                            "scaling": 1
                          }
                        }
                      }
                    ],
                    "series": [
                      {
                        "config": {
                          "name": "DHCP Response Time"
                        },
                        "function": "avg(meraki_dhcp_resp_time)"
                      },
                      {
                        "config": {
                          "name": "DNS Rount Trip Time"
                        },
                        "function": "avg(meraki_dns_req_rtt_time)"
                      },
                      {
                        "config": {
                          "name": "DNS Response Time"
                        },
                        "function": "avg(meraki_dns_resp_time)"
                      },
                      {
                        "config": {
                          "name": "DNS Req Round Trip Time"
                        },
                        "function": "avg(meraki_dns_req_rtt_time)"
                      }
                    ],
                    "rollup": true,
                    "column_pivots": [],
                    "visualization_config": {
                      "interpolation": "linear",
                      "axis_type": "linear"
                    },
                    "formatting_settings": null,
                    "sort": []
                  },
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "timerange": {
                    "from": 3600,
                    "type": "relative"
                  },
                  "streams": [
                    "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                  ],
                  "filter": null,
                  "type": "aggregation",
                  "stream_categories": [],
                  "id": "4e86be0a-5608-436b-b5b7-efe2e31eccc1",
                  "filters": []
                },
                {
                  "config": {
                    "visualization": "pie",
                    "units": {},
                    "column_limit": null,
                    "event_annotation": false,
                    "row_limit": 15,
                    "row_pivots": [
                      {
                        "fields": [
                          "meraki_airmarshal_event_type"
                        ],
                        "type": "values",
                        "config": {
                          "limit": 15,
                          "skip_empty_values": true
                        }
                      }
                    ],
                    "series": [
                      {
                        "config": {
                          "name": null
                        },
                        "function": "count(meraki_airmarshal_event_type)"
                      }
                    ],
                    "rollup": false,
                    "column_pivots": [],
                    "visualization_config": null,
                    "formatting_settings": null,
                    "sort": []
                  },
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "timerange": {
                    "from": 300,
                    "type": "relative"
                  },
                  "streams": [
                    "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                  ],
                  "filter": null,
                  "type": "aggregation",
                  "stream_categories": [],
                  "id": "4b86c586-6824-4308-8fc3-fa932dedc433",
                  "filters": []
                },
                {
                  "config": {
                    "visualization": "pie",
                    "units": {},
                    "column_limit": null,
                    "event_annotation": false,
                    "row_limit": 15,
                    "row_pivots": [
                      {
                        "fields": [
                          "meraki_syslog_severity"
                        ],
                        "type": "values",
                        "config": {
                          "limit": 15,
                          "skip_empty_values": true
                        }
                      }
                    ],
                    "series": [
                      {
                        "config": {
                          "name": null
                        },
                        "function": "count(meraki_syslog_severity)"
                      }
                    ],
                    "rollup": false,
                    "column_pivots": [],
                    "visualization_config": null,
                    "formatting_settings": null,
                    "sort": []
                  },
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "timerange": {
                    "from": 300,
                    "type": "relative"
                  },
                  "streams": [
                    "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                  ],
                  "filter": null,
                  "type": "aggregation",
                  "stream_categories": [],
                  "id": "b242c0a2-cca0-4564-a53d-9ba2e4f8a8b0",
                  "filters": []
                },
                {
                  "config": {
                    "visualization": "pie",
                    "units": {},
                    "column_limit": null,
                    "event_annotation": false,
                    "row_limit": 15,
                    "row_pivots": [
                      {
                        "fields": [
                          "meraki_event_type"
                        ],
                        "type": "values",
                        "config": {
                          "limit": 15,
                          "skip_empty_values": true
                        }
                      }
                    ],
                    "series": [
                      {
                        "config": {
                          "name": null
                        },
                        "function": "count(meraki_event_type)"
                      }
                    ],
                    "rollup": false,
                    "column_pivots": [],
                    "visualization_config": null,
                    "formatting_settings": null,
                    "sort": []
                  },
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "timerange": {
                    "from": 300,
                    "type": "relative"
                  },
                  "streams": [
                    "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                  ],
                  "filter": null,
                  "type": "aggregation",
                  "stream_categories": [],
                  "id": "14bba717-5b3b-40f8-a191-ee744a4b78e4",
                  "filters": []
                },
                {
                  "config": {
                    "visualization": "pie",
                    "units": {},
                    "column_limit": null,
                    "event_annotation": false,
                    "row_limit": 15,
                    "row_pivots": [
                      {
                        "fields": [
                          "meraki_category"
                        ],
                        "type": "values",
                        "config": {
                          "limit": 15
                        }
                      }
                    ],
                    "series": [
                      {
                        "config": {
                          "name": null
                        },
                        "function": "count(meraki_category)"
                      }
                    ],
                    "rollup": false,
                    "column_pivots": [],
                    "visualization_config": null,
                    "formatting_settings": null,
                    "sort": []
                  },
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "timerange": {
                    "from": 86400,
                    "type": "relative"
                  },
                  "streams": [
                    "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                  ],
                  "filter": null,
                  "type": "aggregation",
                  "stream_categories": [],
                  "id": "0044022b-1bbe-488a-a366-77a24eae572f",
                  "filters": []
                },
                {
                  "config": {
                    "visualization": "pie",
                    "units": {},
                    "column_limit": null,
                    "event_annotation": false,
                    "row_limit": 15,
                    "row_pivots": [
                      {
                        "fields": [
                          "meraki_action_taken"
                        ],
                        "type": "values",
                        "config": {
                          "limit": 15,
                          "skip_empty_values": true
                        }
                      }
                    ],
                    "series": [
                      {
                        "config": {
                          "name": null
                        },
                        "function": "count(meraki_action_taken)"
                      }
                    ],
                    "rollup": false,
                    "column_pivots": [],
                    "visualization_config": null,
                    "formatting_settings": null,
                    "sort": []
                  },
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "timerange": {
                    "from": 300,
                    "type": "relative"
                  },
                  "streams": [
                    "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                  ],
                  "filter": null,
                  "type": "aggregation",
                  "stream_categories": [],
                  "id": "32ba85ea-086b-4f23-a22d-b0cfa80db88b",
                  "filters": []
                }
              ],
              "widget_mapping": {
                "4b86c586-6824-4308-8fc3-fa932dedc433": [
                  "cb0c237c-fdd0-4461-ab49-c6897618c7f1"
                ],
                "0044022b-1bbe-488a-a366-77a24eae572f": [
                  "6d3880cf-30fd-4b05-8dfc-e712851f580b"
                ],
                "32ba85ea-086b-4f23-a22d-b0cfa80db88b": [
                  "92a56920-61ee-40e9-82db-ed54145a89e9"
                ],
                "4e86be0a-5608-436b-b5b7-efe2e31eccc1": [
                  "8ce885b7-af48-4cef-8154-0576d75c8c02"
                ],
                "b242c0a2-cca0-4564-a53d-9ba2e4f8a8b0": [
                  "49b170e8-b2b5-41e5-867f-4b80b81a376d"
                ],
                "14bba717-5b3b-40f8-a191-ee744a4b78e4": [
                  "493d415c-6da1-4668-b41a-b92186d46183"
                ]
              },
              "positions": {
                "32ba85ea-086b-4f23-a22d-b0cfa80db88b": {
                  "col": 1,
                  "row": 9,
                  "height": 4,
                  "width": 6
                },
                "14bba717-5b3b-40f8-a191-ee744a4b78e4": {
                  "col": 7,
                  "row": 1,
                  "height": 4,
                  "width": 6
                },
                "0044022b-1bbe-488a-a366-77a24eae572f": {
                  "col": 1,
                  "row": 1,
                  "height": 4,
                  "width": 6
                },
                "b242c0a2-cca0-4564-a53d-9ba2e4f8a8b0": {
                  "col": 7,
                  "row": 9,
                  "height": 4,
                  "width": 6
                },
                "4b86c586-6824-4308-8fc3-fa932dedc433": {
                  "col": 7,
                  "row": 5,
                  "height": 4,
                  "width": 6
                },
                "4e86be0a-5608-436b-b5b7-efe2e31eccc1": {
                  "col": 1,
                  "row": 5,
                  "height": 4,
                  "width": 6
                }
              },
              "formatting": {
                "highlighting": []
              },
              "display_mode_settings": {
                "positions": {}
              }
            },
            "68d83277-6b5f-401d-86cf-7df864fd8ecf": {
              "selected_fields": null,
              "static_message_list_id": null,
              "titles": {
                "widget": {
                  "2d67edd2-582a-417a-a615-9953bc361e8b": "Message Count",
                  "5b82ceb1-b053-4107-b0fa-6bbfa7211268": "Issue Counts",
                  "39b4f656-4031-44ec-80f9-b0b12ab830d1": "Dissassociation Reasons",
                  "daa1e2da-4a33-40ec-b088-6c8c5c456011": "Blocked URLs",
                  "ec34e501-78b2-4c3b-bcba-7a846bd96e17": "Top Blocked URL's"
                },
                "tab": {
                  "title": "URLs"
                }
              },
              "widgets": [
                {
                  "config": {
                    "visualization": "table",
                    "units": {},
                    "column_limit": null,
                    "event_annotation": false,
                    "row_limit": 25,
                    "row_pivots": [
                      {
                        "fields": [
                          "meraki_url",
                          "meraki_filter_reason"
                        ],
                        "type": "values",
                        "config": {
                          "limit": 25,
                          "skip_empty_values": false
                        }
                      }
                    ],
                    "series": [
                      {
                        "config": {
                          "name": "Total Hits"
                        },
                        "function": "count(meraki_url)"
                      },
                      {
                        "config": {
                          "name": "Percentage of Total"
                        },
                        "function": "percentage(meraki_url)"
                      }
                    ],
                    "rollup": false,
                    "column_pivots": [],
                    "visualization_config": {
                      "pinned_columns": []
                    },
                    "formatting_settings": null,
                    "sort": [
                      {
                        "type": "pivot",
                        "field": "meraki_filter_reason",
                        "direction": "Descending"
                      }
                    ]
                  },
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "meraki_filter_action:content_filtering_block"
                  },
                  "timerange": {
                    "range": 0,
                    "type": "relative"
                  },
                  "streams": [
                    "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                  ],
                  "filter": null,
                  "type": "aggregation",
                  "stream_categories": [],
                  "id": "ec34e501-78b2-4c3b-bcba-7a846bd96e17",
                  "filters": []
                },
                {
                  "config": {
                    "fields": [
                      "timestamp",
                      "source"
                    ],
                    "units": {},
                    "show_message_row": true,
                    "show_summary": true,
                    "decorators": [],
                    "sort": [
                      {
                        "type": "pivot",
                        "field": "timestamp",
                        "direction": "Descending"
                      }
                    ]
                  },
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "meraki_filter_action:content_filtering_block"
                  },
                  "timerange": {
                    "range": 0,
                    "type": "relative"
                  },
                  "streams": [
                    "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                  ],
                  "filter": null,
                  "type": "messages",
                  "stream_categories": [],
                  "id": "daa1e2da-4a33-40ec-b088-6c8c5c456011",
                  "filters": []
                }
              ],
              "widget_mapping": {
                "daa1e2da-4a33-40ec-b088-6c8c5c456011": [
                  "ae2ec536-2e24-4652-a16a-e484ba2432d8"
                ],
                "ec34e501-78b2-4c3b-bcba-7a846bd96e17": [
                  "211b641b-2db7-48de-9dda-092e2f79c5a6"
                ]
              },
              "positions": {
                "daa1e2da-4a33-40ec-b088-6c8c5c456011": {
                  "col": 1,
                  "row": 5,
                  "height": 4,
                  "width": "Infinity"
                },
                "ec34e501-78b2-4c3b-bcba-7a846bd96e17": {
                  "col": 1,
                  "row": 1,
                  "height": 4,
                  "width": "Infinity"
                }
              },
              "formatting": {
                "highlighting": []
              },
              "display_mode_settings": {
                "positions": {}
              }
            },
            "40774a0d-c721-414f-bae8-5473bdc891bd": {
              "selected_fields": null,
              "static_message_list_id": null,
              "titles": {
                "widget": {
                  "c10eb3e1-64a3-48d8-8916-625ec2f31fd8": "Issues Totals",
                  "c62e0dec-744b-4fb7-8c4b-90454542836a": "Martan VLAN"
                },
                "tab": {
                  "title": "Security"
                }
              },
              "widgets": [
                {
                  "config": {
                    "visualization": "table",
                    "units": {},
                    "column_limit": null,
                    "event_annotation": false,
                    "row_limit": 15,
                    "row_pivots": [
                      {
                        "fields": [
                          "meraki_issue"
                        ],
                        "type": "values",
                        "config": {
                          "limit": 15,
                          "skip_empty_values": true
                        }
                      }
                    ],
                    "series": [
                      {
                        "config": {
                          "name": "Total Issues"
                        },
                        "function": "count(meraki_issue)"
                      },
                      {
                        "config": {
                          "name": "Percentage of Total"
                        },
                        "function": "percentage(meraki_issue)"
                      }
                    ],
                    "rollup": false,
                    "column_pivots": [],
                    "visualization_config": {
                      "pinned_columns": []
                    },
                    "formatting_settings": null,
                    "sort": []
                  },
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "timerange": {
                    "from": 300,
                    "type": "relative"
                  },
                  "streams": [
                    "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                  ],
                  "filter": null,
                  "type": "aggregation",
                  "stream_categories": [],
                  "id": "c10eb3e1-64a3-48d8-8916-625ec2f31fd8",
                  "filters": []
                },
                {
                  "config": {
                    "fields": [
                      "timestamp",
                      "source"
                    ],
                    "units": {},
                    "show_message_row": true,
                    "show_summary": true,
                    "decorators": [],
                    "sort": [
                      {
                        "type": "pivot",
                        "field": "timestamp",
                        "direction": "Descending"
                      }
                    ]
                  },
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "meraki_event_type:\"martian_vlan\""
                  },
                  "timerange": {
                    "from": 300,
                    "type": "relative"
                  },
                  "streams": [
                    "33bfcf8b-b272-4edf-94b6-f9378286eac4"
                  ],
                  "filter": null,
                  "type": "messages",
                  "stream_categories": [],
                  "id": "c62e0dec-744b-4fb7-8c4b-90454542836a",
                  "filters": []
                }
              ],
              "widget_mapping": {
                "c62e0dec-744b-4fb7-8c4b-90454542836a": [
                  "c2f3196b-a046-4c3f-89ee-4000e5ce2a3b"
                ],
                "c10eb3e1-64a3-48d8-8916-625ec2f31fd8": [
                  "64af2cb9-5324-4b1b-afd7-6e9de6d2eb7a"
                ]
              },
              "positions": {
                "c10eb3e1-64a3-48d8-8916-625ec2f31fd8": {
                  "col": 1,
                  "row": 1,
                  "height": 4,
                  "width": 4
                },
                "c62e0dec-744b-4fb7-8c4b-90454542836a": {
                  "col": 5,
                  "row": 1,
                  "height": 4,
                  "width": 4
                }
              },
              "formatting": {
                "highlighting": []
              },
              "display_mode_settings": {
                "positions": {}
              }
            }
          },
          "properties": [],
          "owner": "admin",
          "title": {
            "@type": "string",
            "@value": "Cisco Meraki"
          },
          "type": "DASHBOARD",
          "description": {
            "@type": "string",
            "@value": ""
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "ab65abe9-6d3c-455b-b461-2cc113db701c",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - translated_src_ip"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - translated_src_ip\"\nwhen\n  has_field(\n    field : \"meraki_translated_src_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_translated_src_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_translated_src_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "1c4e2191-8fca-486c-8c73-56b0a33f36ff",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - URLS"
          },
          "description": {
            "@type": "string",
            "@value": "Parses URLS logs"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - URLS\"\nwhen\n  contains(\n  value: to_string($message.\"message\"),\n  search: \"urls\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src=%{IP:src_ip}:%{INT:src_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst=%{IP:dst_ip}:%{INT:dst_port}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"mac=%{COMMONMAC:mac_address}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"request: %{WORD:request} %{URI:url}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"agent='%{DATA:agent}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  rename_field(\n    old_field : \"meraki_HOSTNAME\",\n    new_field : \"meraki_url_hostname\"\n  );\n  rename_field(\n    old_field : \"meraki_IPORHOST\",\n    new_field : \"meraki_url_iporhost\"\n  );\n  rename_field(\n    old_field : \"meraki_URIHOST\",\n    new_field : \"meraki_url_urihost\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPATH\",\n    new_field : \"meraki_url_path\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPATHPARAM\",\n    new_field : \"meraki_url_uripathparam\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPROTO\",\n    new_field : \"meraki_url_protocol\"\n  );\n  rename_field(\n    old_field : \"meraki_URIPARAM\",\n    new_field : \"meraki_url_uriparam\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\n  remove_single_field(\n    field : \"meraki_IP\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "49221670-4446-4aef-a14f-ba408716cd73",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Extract Syslog PRI"
          },
          "description": {
            "@type": "string",
            "@value": "Parses out syslog severity and facility"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Extract Syslog PRI\"\nwhen\n    has_field(\"message\")\nthen\n    let pri_value = regex(\"<(\\\\d+)>\\\\d\", to_string($message.message));\n    \n    // Convert PRI to Facility and Severity\n    let pri = to_long(pri_value[\"0\"]);\n    let facility = pri / 8;\n    let severity = pri % 8;\n    \n    let severity_text = lookup_value(\"Meraki Syslog Severity Mapping\", to_string(severity));\n    let facility_text = lookup_value(\"Meraki Facility Mapping\", to_string(facility));\n    \n    set_field(\"meraki_syslog_facility\", facility_text);\n    set_field(\"meraki_syslog_severity\", severity_text);\nend\n"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "4d51f007-f285-4783-a6c5-878d3afba849",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - MAC Flap Detected"
          },
          "description": {
            "@type": "string",
            "@value": "Adds issue field for MAC Flap Detected."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - MAC Flap Detected\"\nwhen\n  ( has_field(\"meraki_event_type\") &&\nto_string($message.\"meraki_event_type\") == \"mac_flap_detected\"\n)\n\nthen\n  set_field(\n    field : \"issue\",\n    value : \"MAC Flap Detected\",\n    prefix : \"meraki_\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "be7cb815-8c9f-4bb9-9f67-4f849d13b630",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - syslog_priority"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - syslog_priority\"\nwhen\n  has_field(\n    field : \"meraki_syslog_priority\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_syslog_priority\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_syslog_priority\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "40442564-674e-47c5-a31a-9be3edee49fa",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - last_auth_ago"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - last_auth_ago\"\nwhen\n  has_field(\n    field : \"meraki_last_auth_ago\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\"\n  );\n  let output_1 = get_field(\n    field : \"meraki_last_auth_ago\"\n  );\n  let output_2 = to_double(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_last_auth_ago\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_table",
          "version": "1"
        },
        "id": "e3bd616c-d13f-48c8-a0e7-c9aa35fef3fd",
        "data": {
          "default_single_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "cache_name": {
            "@type": "string",
            "@value": "0baf39f2-1887-43a0-a949-ce5bd293006e"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki - is_wpa"
          },
          "default_multi_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "default_multi_value": {
            "@type": "string",
            "@value": ""
          },
          "data_adapter_name": {
            "@type": "string",
            "@value": "11a7ca5f-a4a4-409b-8f54-23a718336132"
          },
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - is_wpa"
          },
          "default_single_value": {
            "@type": "string",
            "@value": ""
          },
          "description": {
            "@type": "string",
            "@value": "Mapping  is_wpa for Meraki"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "6fa8c95d-9ced-45b9-b98d-63148ee00884",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - dns_req_rtt_time"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - dns_req_rtt_time\"\nwhen\n  has_field(\n    field : \"meraki_dns_req_rtt_time\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_dns_req_rtt_time\"\n  );\n  let output_2 = to_double(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_dns_req_rtt_time\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_table",
          "version": "1"
        },
        "id": "6161baeb-7a6e-410d-8700-ed4f8da81083",
        "data": {
          "default_single_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "cache_name": {
            "@type": "string",
            "@value": "0baf39f2-1887-43a0-a949-ce5bd293006e"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki - icmp_type"
          },
          "default_multi_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "default_multi_value": {
            "@type": "string",
            "@value": ""
          },
          "data_adapter_name": {
            "@type": "string",
            "@value": "329408ba-9c9e-480e-8cba-4e57f02247a5"
          },
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - icmp_type"
          },
          "default_single_value": {
            "@type": "string",
            "@value": ""
          },
          "description": {
            "@type": "string",
            "@value": "Lookup table for converting icmp_type to its description."
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_table",
          "version": "1"
        },
        "id": "7bfc5195-efe7-40f4-904e-0aeedeb8867b",
        "data": {
          "default_single_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "cache_name": {
            "@type": "string",
            "@value": "0baf39f2-1887-43a0-a949-ce5bd293006e"
          },
          "name": {
            "@type": "string",
            "@value": "Meraki Syslog Severity Mapping"
          },
          "default_multi_value_type": {
            "@type": "string",
            "@value": "NULL"
          },
          "default_multi_value": {
            "@type": "string",
            "@value": ""
          },
          "data_adapter_name": {
            "@type": "string",
            "@value": "a539cecd-6155-40a3-b0fd-3f644c86fed4"
          },
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "title": {
            "@type": "string",
            "@value": "Meraki - Syslog Severity Mapping"
          },
          "default_single_value": {
            "@type": "string",
            "@value": ""
          },
          "description": {
            "@type": "string",
            "@value": "Mapping Syslog Severity for meraki"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "2be15c27-e792-4e49-a38d-476fd77f35b1",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - src_ip"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - src_ip\"\nwhen\n  has_field(\n    field : \"meraki_src_ip\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_src_ip\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_src_ip\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "a97b9e6c-23b8-4b1f-a6ea-f6857c2b6774",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Events"
          },
          "description": {
            "@type": "string",
            "@value": "Parses out meraki event logs"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Events\"\nwhen\n  grok(\n  value: to_string($message.\"message\"),\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoc} %{DATA:host} events\"\n).matches == true\n  AND\n  ! contains(\n  value: to_string($message.\"message\"),\n  search: \"fips_event\"\n)\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"type=%{WORD:event_type}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"type='%{WORD:action_taken}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"radio='%{BASE10NUM:radio}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"vap='%{BASE10NUM:vap}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"client_mac='%{COMMONMAC:client_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"band='%{BASE10NUM:band}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"channel='%{BASE10NUM:channel}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"da_vendor='%{WORD:da_vendor}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"duration='%{BASE10NUM:duration}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"auth_neg_dur='%{BASE10NUM:auth_neg_dur}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"last_auth_ago='%{BASE10NUM:last_auth_ago}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"is_wpa='%{BASE10NUM:is_wpa}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"full_conn='%{BASE10NUM:full_conn_time}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"ip_resp='%{BASE10NUM:ip_resp_time}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"ip_src='%{IP:ip_src}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"arp_resp='%{BASE10NUM:arp_resp_time}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"arp_src='%{IP:arp_src}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dns_server='%{IP:dns_server}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dns_req_rtt='%{BASE10NUM:dns_req_rtt_time}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dns_resp='%{BASE10NUM:dns_resp_time}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"aid='%{BASE10NUM:aid}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"group='%{DATA:group}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"attr='%{DATA:attr}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"instigator='%{DATA:instigator}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dhcp_lease_completed='%{BASE10NUM:dhcp_lease_completed}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dhcp_ip='%{IP:dhcp_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dhcp_server='%{IP:dhcp_server}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dhcp_server_mac='%{COMMONMAC:dhcp_server_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dhcp_resp='%{BASE10NUM:dhcp_resp_time}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"last_known_client_ip='%{IPV4:last_known_client_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"rssi='%{BASE10NUM:rssi}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"http_resp='%{BASE10NUM:http_resp_time}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"ssid='%{DATA:ssid}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"bssid='%{DATA:bssid}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"src='%{DATA:src_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"dst='%{DATA:dst_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"wired_mac='%{DATA:wired_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"vlan_id='%{DATA:vlan_id}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"fc_type='%{BASE10NUM:fc_type}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"fc_subtype='%{BASE10NUM:fc_subtype}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"reason='%{DATA:reason}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"last_known_client_ip6='%{IPV6:last_known_client_ip6}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"da_reason='%{BASE10NUM:da_reason}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"da_subreason='%{BASE10NUM:da_subreason}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"(?i)vlan='%{BASE10NUM:vlan}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"port='%{DATA:port}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"(?i)mac='%{COMMONMAC:mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"(?i)client='%{IP:client_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"(?i)details='%{DATA:details}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"summary='%{DATA:summary}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"vpn_type='%{DATA:vpn_type}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"connectivity='%{DATA:connectivity}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"load='%{BASE10NUM:load}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"best_ap='%{IP:best_ap}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"best_ap_load='%{BASE10NUM:best_ap_load}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"best_ap_rssi='%{BASE10NUM:best_ap_rssi}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"original_server_ip='%{IP:original_server_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"original_server_mac='%{COMMONMAC:original_server_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"server_ip='%{IP:server_ip}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"server_mac='%{COMMONMAC:server_mac}'\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  remove_single_field(\n    field : \"meraki_IPV4\"\n  );\n  remove_single_field(\n    field : \"meraki_IPV6\"\n  );\n  remove_single_field(\n    field : \"meraki_IP\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "13736234-8921-429b-bf7f-77270d332d4c",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - fc_subtype"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - fc_subtype\"\nwhen\n  has_field(\n    field : \"meraki_fc_subtype\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_fc_subtype\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_fc_subtype\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "002d0985-edb3-49ab-bde5-443fec38b74f",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - band"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - band\"\nwhen\n  has_field(\n    field : \"meraki_band\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_band\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  let gl2_fragment_extractor_1742593446652 = lookup_value(\"Meraki - band\", to_string($message.\"meraki_band\"));\nset_field(\"meraki_band_description\", gl2_fragment_extractor_1742593446652);\n  let output_3 = gl2_fragment_extractor_1742593446652;\n  set_field(\n    field : \"meraki_band_description\",\n    value : output_3\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "fe3a1bf6-25b2-4c40-8d3d-71cc3a7fdcd5",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - epoch"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - epoch\"\nwhen\n  has_field(\n    field : \"meraki_epoch\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_epoch\"\n  );\n  let output_2 = to_string(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_epoch\",\n    value : output_1\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "b343c46c-16d8-4441-90a7-a94191db3508",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - Events - DHCP No Offers"
          },
          "description": {
            "@type": "string",
            "@value": "Parses event for no dhcp offers to a mac address"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - Events - DHCP No Offers\"\nwhen\n  grok(\n  value: to_string($message.\"message\"),\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category} (?i)dhcp\"\n).matches == true\nthen\n  let gl2_fragment_grok_results = grok(\n  pattern: \"<%{BASE10NUM:syslog_priority}>%{BASE10NUM:syslog_ver} %{BASE10NUM:epoch} %{DATA:host} %{WORD:category}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  let gl2_fragment_grok_results = grok(\n  pattern: \"(?i)dhcp no offers for mac %{COMMONMAC:mac_address}\",\n  value: to_string($message.\"message\")\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\"\n);\n  set_field(\n    field : \"issue\",\n    value : \"No DHCP Offers\",\n    prefix : \"meraki_\"\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "d0300c50-4486-44b5-be2e-7750c7cd9998",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - http_resp_time"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - http_resp_time\"\nwhen\n  has_field(\n    field : \"meraki_http_resp_time\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_http_resp_time\"\n  );\n  let output_2 = to_double(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_http_resp_time\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "825e9d85-7841-45bd-b4e5-f5e7a00c813d",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - server"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - server\"\nwhen\n  has_field(\n    field : \"meraki_server\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_server\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_server\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "4eb4979f-6696-4c48-8762-6e998044ef58",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - syslog_ver"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - syslog_ver\"\nwhen\n  has_field(\n    field : \"meraki_syslog_ver\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_syslog_ver\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_syslog_ver\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "60086eb2-3015-4f16-8d0b-e88308907161",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - best_ap"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - best_ap\"\nwhen\n  has_field(\n    field : \"meraki_best_ap\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_best_ap\"\n  );\n  let output_2 = to_ip(\n    ip : output_1\n  );\n  set_field(\n    field : \"meraki_best_ap\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "88ba8aa5-9a30-4d48-a581-2e46961f95a2",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - dhcp_resp_time"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - dhcp_resp_time\"\nwhen\n  has_field(\n    field : \"meraki_dhcp_resp_time\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_dhcp_resp_time\"\n  );\n  let output_2 = to_double(\n    value : output_1\n  );\n  set_field(\n    field : \"meraki_dhcp_resp_time\",\n    value : output_2\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "6ca441c7-ca7b-45db-bc9c-2794fb2b48bf",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - reason"
          },
          "description": {
            "@type": "string",
            "@value": "Converts disassociation codes to human readable (802.11 Dissociation Codes)"
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - reason\"\nwhen\n  has_field(\n    field : \"meraki_reason\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let gl2_fragment_grok_results = grok(\n  pattern: \"%{BASE10NUM:reason}\",\n  value: to_string($message.\"meraki_reason\"),\n  only_named_captures: true\n);\nset_fields(\n  fields: gl2_fragment_grok_results,\n  prefix: \"meraki_\",\n  suffix: \"_num\"\n);\n  let gl2_fragment_extractor_1743194726951 = lookup_value(\"Meraki - reason\", to_string($message.\"meraki_reason_num\"));\nset_field(\"meraki_reason_description\", gl2_fragment_extractor_1743194726951);\n  let output_1 = gl2_fragment_extractor_1743194726951;\n  remove_single_field(\n    field : \"meraki_reason_num\"\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "pipeline_rule",
          "version": "1"
        },
        "id": "05b5e495-c70d-42f7-9899-312ddc3b721e",
        "data": {
          "title": {
            "@type": "string",
            "@value": "Meraki - is_wpa"
          },
          "description": {
            "@type": "string",
            "@value": "Converts specified Field to correct type."
          },
          "source": {
            "@type": "string",
            "@value": "rule \"Meraki - is_wpa\"\nwhen\n  has_field(\n    field : \"meraki_is_wpa\"\n  )\nthen\n  route_to_stream(\n    name : \"Field Type Conversion\",\n    remove_from_default : true\n  );\n  let output_1 = get_field(\n    field : \"meraki_is_wpa\"\n  );\n  let output_2 = to_long(\n    value : output_1\n  );\n  let gl2_fragment_extractor_1742593446652 = lookup_value(\"Meraki - is_wpa\", to_string($message.\"meraki_is_wpa\"));\nset_field(\"meraki_is_wpa_description\", gl2_fragment_extractor_1742593446652);\n  let output_3 = gl2_fragment_extractor_1742593446652;\n  set_field(\n    field : \"meraki_is_wpa_description\",\n    value : output_3\n  );\n  remove_from_stream(\n    name : \"Field Type Conversion\"\n  );\n  route_to_stream(\n    name : \"Cisco Meraki\",\n    remove_from_default : true\n  );\nend"
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      },
      {
        "v": "1",
        "type": {
          "name": "lookup_cache",
          "version": "1"
        },
        "id": "0baf39f2-1887-43a0-a949-ce5bd293006e",
        "data": {
          "_scope": {
            "@type": "string",
            "@value": "DEFAULT"
          },
          "name": {
            "@type": "string",
            "@value": "generic-cache"
          },
          "title": {
            "@type": "string",
            "@value": "Generic Cache"
          },
          "description": {
            "@type": "string",
            "@value": "Generic, local only in memory cache"
          },
          "configuration": {
            "type": {
              "@type": "string",
              "@value": "guava_cache"
            },
            "max_size": {
              "@type": "integer",
              "@value": 1000
            },
            "expire_after_access": {
              "@type": "long",
              "@value": 60
            },
            "expire_after_access_unit": {
              "@type": "string",
              "@value": "SECONDS"
            },
            "expire_after_write": {
              "@type": "long",
              "@value": 0
            },
            "ignore_null": {
              "@type": "boolean",
              "@value": false
            }
          }
        },
        "constraints": [
          {
            "type": "server-version",
            "version": ">=6.1.8+76bd0f0"
          }
        ]
      }
    ]
  }